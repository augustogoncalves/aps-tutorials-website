"use strict";(self.webpackChunkaps_tutorials_website=self.webpackChunkaps_tutorials_website||[]).push([[861],{4137:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var a=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=a.createContext({}),p=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},u=function(e){var t=p(e.components);return a.createElement(l.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,r=e.originalType,l=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),d=p(n),m=o,g=d["".concat(l,".").concat(m)]||d[m]||c[m]||r;return n?a.createElement(g,s(s({ref:t},u),{},{components:n})):a.createElement(g,s({ref:t},u))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=n.length,s=new Array(r);s[0]=d;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:o,s[1]=i;for(var p=2;p<r;p++)s[p]=n[p];return a.createElement.apply(null,s)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},425:(e,t,n)=>{n.d(t,{Z:()=>s});var a=n(7294),o=n(6010);const r="tabItem_Ymn6";function s(e){let{children:t,hidden:n,className:s}=e;return a.createElement("div",{role:"tabpanel",className:(0,o.Z)(r,s),hidden:n},t)}},3992:(e,t,n)=>{n.d(t,{Z:()=>S});var a=n(7462),o=n(7294),r=n(6010),s=n(2957),i=n(6550),l=n(5238),p=n(3609),u=n(2560);function c(e){return function(e){return o.Children.map(e,(e=>{if((0,o.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))}(e).map((e=>{let{props:{value:t,label:n,attributes:a,default:o}}=e;return{value:t,label:n,attributes:a,default:o}}))}function d(e){const{values:t,children:n}=e;return(0,o.useMemo)((()=>{const e=t??c(n);return function(e){const t=(0,p.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function m(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function g(e){let{queryString:t=!1,groupId:n}=e;const a=(0,i.k6)(),r=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,l._X)(r),(0,o.useCallback)((e=>{if(!r)return;const t=new URLSearchParams(a.location.search);t.set(r,e),a.replace({...a.location,search:t.toString()})}),[r,a])]}function v(e){const{defaultValue:t,queryString:n=!1,groupId:a}=e,r=d(e),[s,i]=(0,o.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!m({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const a=n.find((e=>e.default))??n[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:t,tabValues:r}))),[l,p]=g({queryString:n,groupId:a}),[c,v]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[a,r]=(0,u.Nk)(n);return[a,(0,o.useCallback)((e=>{n&&r.set(e)}),[n,r])]}({groupId:a}),k=(()=>{const e=l??c;return m({value:e,tabValues:r})?e:null})();(0,o.useLayoutEffect)((()=>{k&&i(k)}),[k]);return{selectedValue:s,selectValue:(0,o.useCallback)((e=>{if(!m({value:e,tabValues:r}))throw new Error(`Can't select invalid tab value=${e}`);i(e),p(e),v(e)}),[p,v,r]),tabValues:r}}var k=n(1048);const f="tabList__CuJ",h="tabItem_LNqP";function b(e){let{className:t,block:n,selectedValue:i,selectValue:l,tabValues:p}=e;const u=[],{blockElementScrollPositionUntilNextRender:c}=(0,s.o5)(),d=e=>{const t=e.currentTarget,n=u.indexOf(t),a=p[n].value;a!==i&&(c(t),l(a))},m=e=>{let t=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const n=u.indexOf(e.currentTarget)+1;t=u[n]??u[0];break}case"ArrowLeft":{const n=u.indexOf(e.currentTarget)-1;t=u[n]??u[u.length-1];break}}t?.focus()};return o.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.Z)("tabs",{"tabs--block":n},t)},p.map((e=>{let{value:t,label:n,attributes:s}=e;return o.createElement("li",(0,a.Z)({role:"tab",tabIndex:i===t?0:-1,"aria-selected":i===t,key:t,ref:e=>u.push(e),onKeyDown:m,onClick:d},s,{className:(0,r.Z)("tabs__item",h,s?.className,{"tabs__item--active":i===t})}),n??t)})))}function N(e){let{lazy:t,children:n,selectedValue:a}=e;if(n=Array.isArray(n)?n:[n],t){const e=n.find((e=>e.props.value===a));return e?(0,o.cloneElement)(e,{className:"margin-top--md"}):null}return o.createElement("div",{className:"margin-top--md"},n.map(((e,t)=>(0,o.cloneElement)(e,{key:t,hidden:e.props.value!==a}))))}function E(e){const t=v(e);return o.createElement("div",{className:(0,r.Z)("tabs-container",f)},o.createElement(b,(0,a.Z)({},e,t)),o.createElement(N,(0,a.Z)({},e,t)))}function S(e){const t=(0,k.Z)();return o.createElement(E,(0,a.Z)({key:String(t)},e))}},415:(e,t,n)=>{n.d(t,{Z:()=>s});var a=n(7294),o=n(3992),r=n(425);function s(e){let{NodeJsVsCode:t,DotNetVsCode:n,DotNetVs2022:s}=e;return a.createElement(o.Z,{groupId:"development-environment"},a.createElement(r.Z,{value:"nodejs-vscode",label:"Node.js & VSCode",default:!0},a.createElement(t,null)),a.createElement(r.Z,{value:"dotnet-vscode",label:".NET 6 & VSCode"},a.createElement(n,null)),a.createElement(r.Z,{value:"dotnet-vs2022",label:".NET 6 & VS2022"},a.createElement(s,null)))}},1083:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>_,contentTitle:()=>j,default:()=>R,frontMatter:()=>P,metadata:()=>x,toc:()=>q});var a=n(7462),o=(n(7294),n(4137)),r=n(415);const s={toc:[]};function i(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,a.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Crie uma nova pasta para o seu projeto, navegue at\xe9 ela na linha de comando,\ne inicializar um novo projeto Node.js:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"npm init -y\n")),(0,o.kt)("p",null,"Em seguida, instale todas as depend\xeancias Node.js que vamos usar. Neste caso ser\xe1 ",(0,o.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/dotenv"},"dotenv"),"\n(utilit\xe1rio para inicializar vari\xe1veis de ambiente a partir de um arquivo), ",(0,o.kt)("a",{parentName:"p",href:"https://expressjs.com"},"Express.js")," (web framework),\ne ",(0,o.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/cookie-session"},"cookie-session")," para lidar com sess\xf5es baseadas em cookies e, finalmente, os m\xf3dulos do SDK do APS necess\xe1rios:"),(0,o.kt)("admonition",{type:"caution"},(0,o.kt)("p",{parentName:"admonition"},"A partir de abril de 2024, o APS SDK para Node.js est\xe1 em beta, o que significa que as interfaces p\xfablicas ainda podem mudar.\nPara evitar poss\xedveis problemas, recomendamos a instala\xe7\xe3o das vers\xf5es espec\xedficas desses pacotes, conforme mostrado abaixo.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"npm install --save dotenv express cookie-session\nnpm install --save @aps_sdk/autodesk-sdkmanager@0.0.7-beta.1\nnpm install --save @aps_sdk/authentication@0.1.0-beta.1\nnpm install --save @aps_sdk/data-management@0.1.0-beta.1\n")),(0,o.kt)("p",null,"As ''depend\xeancias'' no seu arquivo 'package.json' agora devem ter a seguinte apar\xeancia:\n(potencialmente com n\xfameros de vers\xe3o ligeiramente diferentes):"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'// ...\n  "dependencies": {\n    "@aps_sdk/authentication": "0.1.0-beta.1",\n    "@aps_sdk/autodesk-sdkmanager": "0.0.7-beta.1",\n    "@aps_sdk/data-management": "0.1.0-beta.1",\n    "cookie-session": "^1.4.0",\n    "dotenv": "^16.3.1",\n    "express": "^4.18.2"\n  },\n// ...\n')),(0,o.kt)("p",null,"Finalmente, vamos criar mais algumas subpastas na pasta do projeto que precisaremos mais tarde:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"'wwwroot' - \xe9 aqui que vamos colocar todos os ativos do lado do cliente (HTML, CSS, JavaScript, imagens, etc.)"),(0,o.kt)("li",{parentName:"ul"},"'rotas' - \xe9 aqui que vamos implementar todos os endpoints do servidor"),(0,o.kt)("li",{parentName:"ul"},"'servi\xe7os' - aqui vamos manter toda a l\xf3gica do lado do servidor que pode ser compartilhada por diferentes endpoints")))}i.isMDXComponent=!0;const l={toc:[]};function p(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,a.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Crie um arquivo 'config.js' na raiz da pasta do projeto e adicione o seguinte c\xf3digo:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="config.js"',title:'"config.js"'},"require('dotenv').config();\nlet { APS_CLIENT_ID, APS_CLIENT_SECRET, APS_CALLBACK_URL, SERVER_SESSION_SECRET, PORT } = process.env;\nif (!APS_CLIENT_ID || !APS_CLIENT_SECRET || !APS_CALLBACK_URL || !SERVER_SESSION_SECRET) {\n    console.warn('Missing some of the environment variables.');\n    process.exit(1);\n}\nPORT = PORT || 8080;\nmodule.exports = {\n    APS_CLIENT_ID,\n    APS_CLIENT_SECRET,\n    APS_CALLBACK_URL,\n    SERVER_SESSION_SECRET,\n    PORT\n};\n")),(0,o.kt)("p",null,"A biblioteca 'dotenv' inicializa vari\xe1veis de ambiente de um arquivo ",(0,o.kt)("em",{parentName:"p"},".env")," local (se houver).\nEm seguida, basta ler as vari\xe1veis de ambiente de 'process.env' e sair do aplicativo\nimediatamente se alguma das propriedades necess\xe1rias estiver faltando."),(0,o.kt)("p",null,"Next, let's create the ",(0,o.kt)("em",{parentName:"p"},".env")," file in the project folder, and populate it with the required\nenvironment variables (replacing ",(0,o.kt)("inlineCode",{parentName:"p"},"<client-id>")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"<client-secret>")," with your APS Client ID\nand Client Secret, and ",(0,o.kt)("inlineCode",{parentName:"p"},"<secret-phrase>")," with an arbitrary string):"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:'language-title=".env"'},'APS_CLIENT_ID="<client-id>"\nAPS_CLIENT_SECRET="<client-secret>"\nAPS_CALLBACK_URL="http://localhost:8080/api/auth/callback" # URL your users will be redirected to after logging in with their Autodesk account\nSERVER_SESSION_SECRET="<secret-phrase>" # secret phrase used to encrypt/decrypt server session cookies\n')),(0,o.kt)("admonition",{type:"caution"},(0,o.kt)("p",{parentName:"admonition"},"Como o arquivo '.env' cont\xe9m informa\xe7\xf5es confidenciais, certifique-se de que ele n\xe3o esteja inclu\xeddo no git!\nIsso pode ser garantido adicionando a linha '.env' ao arquivo ",(0,o.kt)("a",{parentName:"p",href:"https://git-scm.com/docs/gitignore"},".gitignore"),".")),(0,o.kt)("p",null,"Agora, para poder executar e depurar nosso aplicativo do Visual Studio Code, precisamos criar\na ",(0,o.kt)("a",{parentName:"p",href:"https://code.visualstudio.com/docs/editor/debugging#_launch-configurations"},"configura\xe7\xe3o de inicializa\xe7\xe3o"),".\nUse ",(0,o.kt)("em",{parentName:"p"},"Run > Adicionar Configuration")," no menu para criar uma nova configura\xe7\xe3o e quando solicitado\nPara o ambiente espec\xedfico, escolha ",(0,o.kt)("em",{parentName:"p"},"Node.js"),". Isso criar\xe1 uma nova ",(0,o.kt)("em",{parentName:"p"},".vscode"),"\nsubpasta em seu projeto com um arquivo ",(0,o.kt)("em",{parentName:"p"},"launch.json")," onde voc\xea pode definir diferentes\nconfigura\xe7\xf5es de inicializa\xe7\xe3o. Substitua o conte\xfado do arquivo pelo seguinte:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json",metastring:'title=".vscode/launch.json"',title:'".vscode/launch.json"'},'{\n    "version": "0.2.0",\n    "configurations": [\n        {\n            "type": "node",\n            "request": "launch",\n            "name": "Launch Server",\n            "runtimeExecutable": "npm",\n            "runtimeArgs": [\n                "start"\n            ],\n            "skipFiles": [\n                "<node_internals>/**/*.js"\n            ]\n        }\n    ]\n}\n')),(0,o.kt)("p",null,"Estamos definindo uma configura\xe7\xe3o de lan\xe7amento \xfanico chamada ",(0,o.kt)("em",{parentName:"p"},"Launch Server")," que simplesmente\nInicie nosso aplicativo usando o comando 'npm start'."))}p.isMDXComponent=!0;const u={toc:[]};function c(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Crie um arquivo 'server.js' na raiz da pasta do projeto com o seguinte c\xf3digo:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="server.js"',title:'"server.js"'},"const express = require('express');\nconst session = require('cookie-session');\nconst { PORT, SERVER_SESSION_SECRET } = require('./config.js');\nlet app = express();\napp.use(express.static('wwwroot'));\napp.use(session({ secret: SERVER_SESSION_SECRET, maxAge: 24 * 60 * 60 * 1000 }));\napp.listen(PORT, () => console.log(`Server listening on port ${PORT}...`));\n")),(0,o.kt)("p",null,"Por enquanto, o servidor n\xe3o est\xe1 fazendo muito, apenas servindo ativos do lado do cliente da subpasta 'wwwroot',\ne acessar dados de sess\xe3o armazenados em cookies. Os cookies ser\xe3o criptografados usando uma frase secreta\nque precisaremos passar para o aplicativo atrav\xe9s da vari\xe1vel de ambiente 'SERVER_SESSION_SECRET'."),(0,o.kt)("p",null,"Em seguida, vamos adicionar um script '\"start\": \"node server.js'' ao arquivo 'package.json' para que possamos\nExecute facilmente nosso aplicativo mais tarde:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'// ...\n"scripts": {\n    "start": "node server.js"\n}\n// ...\n')))}c.isMDXComponent=!0;const d={toc:[]};function m(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Inicie o aplicativo do Visual Studio Code (por exemplo, por meio do ",(0,o.kt)("em",{parentName:"p"},"Run > Debugging")," Iniciar\nou pressionando 'F5') e navegue at\xe9 ",(0,o.kt)("a",{parentName:"p",href:"http://localhost:8080"},"http://localhost:8080"),"\nno navegador. O servidor deve responder com 'N\xe3o \xe9 poss\xedvel obter /' porque n\xe3o adicionamos nenhum\nl\xf3gica para ele ainda. Esse ser\xe1 o tema do pr\xf3ximo passo."))}m.isMDXComponent=!0;const g={toc:[]};function v(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,a.Z)({},g,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Crie um arquivo 'Startup.cs' na pasta raiz do seu projeto com o seguinte conte\xfado:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Startup.cs"',title:'"Startup.cs"'},'using System;\nusing Microsoft.AspNetCore.Builder;\nusing Microsoft.AspNetCore.Hosting;\nusing Microsoft.Extensions.Configuration;\nusing Microsoft.Extensions.DependencyInjection;\nusing Microsoft.Extensions.Hosting;\npublic class Startup\n{\n    public Startup(IConfiguration configuration)\n    {\n        Configuration = configuration;\n    }\n    public IConfiguration Configuration { get; }\n    // This method gets called by the runtime. Use this method to add services to the container.\n    public void ConfigureServices(IServiceCollection services)\n    {\n        services.AddControllers();\n        var clientID = Configuration["APS_CLIENT_ID"];\n        var clientSecret = Configuration["APS_CLIENT_SECRET"];\n        var callbackURL = Configuration["APS_CALLBACK_URL"];\n        if (string.IsNullOrEmpty(clientID) || string.IsNullOrEmpty(clientSecret) || string.IsNullOrEmpty(callbackURL))\n        {\n            throw new ApplicationException("Missing required environment variables APS_CLIENT_ID, APS_CLIENT_SECRET, or APS_CALLBACK_URL.");\n        }\n    }\n    // This method gets called by the runtime. Use this method to configure the HTTP request pipeline.\n    public void Configure(IApplicationBuilder app, IWebHostEnvironment env)\n    {\n        if (env.IsDevelopment())\n        {\n            app.UseDeveloperExceptionPage();\n        }\n        app.UseDefaultFiles();\n        app.UseStaticFiles();\n        app.UseRouting();\n        app.UseEndpoints(endpoints =>\n        {\n            endpoints.MapControllers();\n        });\n    }\n}\n')),(0,o.kt)("p",null,"A classe 'Startup' \xe9 respons\xe1vel por configurar nosso servidor e seu \"middleware\" (por exemplo,\nservindo de arquivos est\xe1ticos) e para recuperar o intpus de configura\xe7\xe3o de vari\xe1veis de ambiente\n(ou de outros ",(0,o.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/aspnet/core/fundamentals/configuration/?view=aspnetcore-6.0#configuration-providers"},"provedores de configura\xe7\xe3o"),")\npara uso posterior."),(0,o.kt)("p",null,"Now, to pass actual configuration values to our application for debugging purposes,\nwe will modify the ",(0,o.kt)("em",{parentName:"p"},"appsettings.Development.json")," file in our project folder\n(or create one of it does not exist) with the following content, replacing\n",(0,o.kt)("inlineCode",{parentName:"p"},"<client-id>")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"<client-secret>")," with your APS Client ID and Client Secret:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "Logging": {\n    "LogLevel": {\n      "Default": "Information",\n      "Microsoft.AspNetCore": "Warning"\n    }\n  },\n  "APS_CLIENT_ID": "<client-id>",\n  "APS_CLIENT_SECRET": "<client-secret>",\n  "APS_CALLBACK_URL": "http://localhost:8080/api/auth/callback"\n}\n')),(0,o.kt)("admonition",{type:"caution"},(0,o.kt)("p",{parentName:"admonition"},"Desde o ",(0,o.kt)("em",{parentName:"p"},"appsettings. Development.json")," arquivo cont\xe9m informa\xe7\xf5es confidenciais, certifique-se de que ele est\xe1 ",(0,o.kt)("strong",{parentName:"p"},"n\xe3o")," inclu\xeddo no git!\nIsso pode ser garantido adicionando o 'appsettings. Development.json' linha para o arquivo ",(0,o.kt)("a",{parentName:"p",href:"https://git-scm.com/docs/gitignore"},".gitignore"),".")))}v.isMDXComponent=!0;const k={toc:[]};function f(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,a.Z)({},k,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Substitua o conte\xfado de 'Program.cs' pelo seguinte:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Program.cs"',title:'"Program.cs"'},"using Microsoft.AspNetCore.Hosting;\nusing Microsoft.Extensions.Hosting;\npublic class Program\n{\n    public static void Main(string[] args)\n    {\n        CreateHostBuilder(args).Build().Run();\n    }\n    public static IHostBuilder CreateHostBuilder(string[] args) =>\n        Host.CreateDefaultBuilder(args)\n            .ConfigureWebHostDefaults(webBuilder =>\n            {\n                webBuilder.UseStartup<Startup>();\n            });\n}\n")),(0,o.kt)("p",null,"Esse c\xf3digo garantir\xe1 que o aplicativo .NET crie um servidor Web com nosso\nnova classe 'Startup'."),(0,o.kt)("p",null,"E, finalmente, vamos atualizar o arquivo 'launchSettings.json' na pasta 'Propriedades' para fazer\ncerteza de que nosso aplicativo de servidor est\xe1 usando o protocolo padr\xe3o (HTTP) e a porta (8080) que n\xf3s\nser\xe1 usado ao longo deste tutorial. Atualizar a propriedade 'applicationUrl' do padr\xe3o\nIniciar perfil para 'http://localhost:8080':"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "iisSettings": {\n    "windowsAuthentication": false,\n    "anonymousAuthentication": true,\n    "iisExpress": {\n      "applicationUrl": "http://localhost:38524",\n      "sslPort": 44323\n    }\n  },\n  "profiles": {\n    "my_aps_app": {\n      "commandName": "Project",\n      "dotnetRunMessages": true,\n      "launchBrowser": true,\n      // highlight-start\n      "applicationUrl": "http://localhost:8080",\n      // highlight-end\n      "environmentVariables": {\n        "ASPNETCORE_ENVIRONMENT": "Development"\n      }\n    },\n    "IIS Express": {\n      "commandName": "IISExpress",\n      "launchBrowser": true,\n      "environmentVariables": {\n        "ASPNETCORE_ENVIRONMENT": "Development"\n      }\n    }\n  }\n}\n')))}f.isMDXComponent=!0;const h={toc:[]};function b(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,a.Z)({},h,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Substitua o conte\xfado de 'Program.cs' pelo seguinte:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Program.cs"',title:'"Program.cs"'},"using Microsoft.AspNetCore.Hosting;\nusing Microsoft.Extensions.Hosting;\npublic class Program\n{\n    public static void Main(string[] args)\n    {\n        CreateHostBuilder(args).Build().Run();\n    }\n    public static IHostBuilder CreateHostBuilder(string[] args) =>\n        Host.CreateDefaultBuilder(args)\n            .ConfigureWebHostDefaults(webBuilder =>\n            {\n                webBuilder.UseStartup<Startup>();\n            });\n}\n")),(0,o.kt)("p",null,"Esse c\xf3digo garantir\xe1 que o aplicativo .NET crie um servidor Web com nosso\nnova classe 'Startup'."),(0,o.kt)("p",null,"E, finalmente, vamos atualizar o arquivo 'launchSettings.json' na pasta 'Propriedades' para fazer\ncerteza de que nosso aplicativo de servidor est\xe1 usando o protocolo padr\xe3o (HTTP) e a porta (8080) que n\xf3s\nser\xe1 usado ao longo deste tutorial. Atualizar a propriedade 'applicationUrl' do padr\xe3o\nIniciar perfil para 'http://localhost:8080':"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "iisSettings": {\n    "windowsAuthentication": false,\n    "anonymousAuthentication": true,\n    "iisExpress": {\n      "applicationUrl": "http://localhost:38524",\n      "sslPort": 44323\n    }\n  },\n  "profiles": {\n    "MyApsApp": {\n      "commandName": "Project",\n      "dotnetRunMessages": true,\n      "launchBrowser": true,\n      // highlight-start\n      "applicationUrl": "http://localhost:8080",\n      // highlight-end\n      "environmentVariables": {\n        "ASPNETCORE_ENVIRONMENT": "Development"\n      }\n    },\n    "IIS Express": {\n      "commandName": "IISExpress",\n      "launchBrowser": true,\n      "environmentVariables": {\n        "ASPNETCORE_ENVIRONMENT": "Development"\n      }\n    }\n  }\n}\n')))}b.isMDXComponent=!0;const N={toc:[]};function E(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,a.Z)({},N,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Crie uma nova pasta para seu projeto, navegue at\xe9 ela na linha de comando e inicialize uma nova\nASP.NET Projeto principal:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"dotnet new web\n")),(0,o.kt)("p",null,"Em seguida, precisaremos instalar as depend\xeancias. Neste caso, ser\xe3o os pacotes do SDK do APS necess\xe1rios:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"dotnet add package Autodesk.SdkManager\ndotnet add package Autodesk.Authentication\ndotnet add package Autodesk.DataManagement\n")),(0,o.kt)("p",null,"O arquivo '*.csproj' em seu projeto agora deve ser semelhante a este (possivelmente com\nn\xfameros de vers\xe3o ligeiramente diferentes e configura\xe7\xf5es adicionais do .NET):"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-xml"},'<Project Sdk="Microsoft.NET.Sdk.Web">\n  <PropertyGroup>\n    <TargetFramework>net6.0</TargetFramework>\n  </PropertyGroup>\n  <ItemGroup>\n  </ItemGroup>\n  <ItemGroup>\n    <PackageReference Include="Autodesk.Authentication" Version="1.0.0" />\n    <PackageReference Include="Autodesk.DataManagement" Version="1.0.0" />\n    <PackageReference Include="Autodesk.SdkManager" Version="1.0.0" />\n  </ItemGroup>\n</Project>\n')),(0,o.kt)("p",null,"Finalmente, vamos criar mais algumas subpastas na pasta do projeto que precisaremos mais tarde:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"'Controladores' - \xe9 aqui que vamos implementar todos os endpoints do servidor"),(0,o.kt)("li",{parentName:"ul"},"'Modelos' - aqui vamos manter toda a l\xf3gica do lado do servidor que pode ser compartilhada por diferentes endpoints"),(0,o.kt)("li",{parentName:"ul"},"'wwwroot' - \xe9 aqui que vamos colocar todos os ativos do lado do cliente (HTML, CSS, JavaScript, imagens, etc.)")),(0,o.kt)("admonition",{type:"note"},(0,o.kt)("p",{parentName:"admonition"},"Se a pasta '.vscode' n\xe3o for criada automaticamente, voc\xea poder\xe1 cri\xe1-la por meio do painel lateral Executar & Depurar")),(0,o.kt)("p",null,"Para criar a pasta '.vscode', clique na ferramenta ",(0,o.kt)("em",{parentName:"p"},"Executar e Depurar no painel lateral esquerdo > criar um arquivo launch.json > Selecionar . NET5+ & .NET Core"),"."))}E.isMDXComponent=!0;const S={toc:[]};function w(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,a.Z)({},S,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Inicie o aplicativo do Visual Studio Code (por exemplo, por meio do ",(0,o.kt)("em",{parentName:"p"},"Run > Debugging")," Iniciar\nou pressionando 'F5') e navegue at\xe9 ",(0,o.kt)("a",{parentName:"p",href:"http://localhost:8080"},"http://localhost:8080"),"\nno navegador. O servidor deve responder com um erro 404 porque n\xe3o adicionamos nenhum\nl\xf3gica para ele ainda. Esse ser\xe1 o tema do pr\xf3ximo passo."))}w.isMDXComponent=!0;var C=n(2897),y=n(3301);const T={toc:[]};function A(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,a.Z)({},T,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)(C.ZP,{mdxType:"SetupVS2022"}),(0,o.kt)(y.ZP,{mdxType:"AddDependencies"}))}A.isMDXComponent=!0;const D={toc:[]};function I(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,a.Z)({},D,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Inicie o aplicativo do Visual Studio (por exemplo, por meio do ",(0,o.kt)("em",{parentName:"p"},"Debug > Iniciar Debugging"),"\nou pressionando 'F5'), e ele abrir\xe1 automaticamente ",(0,o.kt)("a",{parentName:"p",href:"http://localhost:8080"},"http://localhost:8080"),"\nno seu navegador. Voc\xea deve obter uma resposta 404 porque ainda n\xe3o implementamos nenhuma l\xf3gica de servidor.\nEsse ser\xe1 o objetivo do pr\xf3ximo passo."))}I.isMDXComponent=!0;const P={},j="Configura\xe7\xe3o do aplicativo",x={unversionedId:"tutorials/hubs-browser/setup",id:"tutorials/hubs-browser/setup",title:"Configura\xe7\xe3o do aplicativo",description:"Vamos come\xe7ar criando um novo projeto, instalando depend\xeancias necess\xe1rias e configurando",source:"@site/i18n/pt/docusaurus-plugin-content-docs/current/03-tutorials/02-hubs-browser/01-setup.mdx",sourceDirName:"03-tutorials/02-hubs-browser",slug:"/tutorials/hubs-browser/setup",permalink:"/pt/tutorials/hubs-browser/setup",draft:!1,editUrl:"https://github.com/autodesk-platform-services/aps-tutorials-website/edit/master/docs/03-tutorials/02-hubs-browser/01-setup.mdx",tags:[],version:"current",sidebarPosition:1,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Navegador Hubs",permalink:"/pt/tutorials/hubs-browser/"},next:{title:"Autentica\xe7\xe3o",permalink:"/pt/tutorials/hubs-browser/auth"}},_={},q=[{value:"Criar projeto",id:"criar-projeto",level:2},{value:"Configura\xe7\xe3o do aplicativo",id:"configura\xe7\xe3o-do-aplicativo-1",level:2},{value:"Criar servidor b\xe1sico",id:"criar-servidor-b\xe1sico",level:2},{value:"Experimente",id:"experimente",level:2}],M={toc:q};function R(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,a.Z)({},M,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"configura\xe7\xe3o-do-aplicativo"},"Configura\xe7\xe3o do aplicativo"),(0,o.kt)("p",null,"Vamos come\xe7ar criando um novo projeto, instalando depend\xeancias necess\xe1rias e configurando\nUm aplicativo de servidor b\xe1sico."),(0,o.kt)("h2",{id:"criar-projeto"},"Criar projeto"),(0,o.kt)(r.Z,{NodeJsVsCode:i,DotNetVsCode:E,DotNetVs2022:A,mdxType:"EnvTabs"}),(0,o.kt)("h2",{id:"configura\xe7\xe3o-do-aplicativo-1"},"Configura\xe7\xe3o do aplicativo"),(0,o.kt)("p",null,"Nosso aplicativo precisar\xe1 de alguns par\xe2metros de configura\xe7\xe3o para funcionar corretamente, por exemplo,\nas credenciais do nosso aplicativo APS para comunica\xe7\xe3o com o Autodesk Platform Services ou a URL de retorno de chamada\npara onde nossos usu\xe1rios ser\xe3o redirecionados durante o ",(0,o.kt)("a",{parentName:"p",href:"https://aps.autodesk.com/en/docs/oauth/v2/tutorials/get-3-legged-token/"},"fluxo de trabalho de autentica\xe7\xe3o de 3 pernas"),".\nPassaremos esses par\xe2metros para o aplicativo do servidor usando vari\xe1veis de ambiente."),(0,o.kt)(r.Z,{NodeJsVsCode:p,DotNetVsCode:v,DotNetVs2022:v,mdxType:"EnvTabs"}),(0,o.kt)("h2",{id:"criar-servidor-b\xe1sico"},"Criar servidor b\xe1sico"),(0,o.kt)("p",null,"Em seguida, vamos configurar um aplicativo de servidor b\xe1sico."),(0,o.kt)(r.Z,{NodeJsVsCode:c,DotNetVsCode:f,DotNetVs2022:b,mdxType:"EnvTabs"}),(0,o.kt)("h2",{id:"experimente"},"Experimente"),(0,o.kt)(r.Z,{NodeJsVsCode:m,DotNetVsCode:w,DotNetVs2022:I,mdxType:"EnvTabs"}))}R.isMDXComponent=!0},2897:(e,t,n)=>{n.d(t,{ZP:()=>s});var a=n(7462),o=(n(7294),n(4137));const r={toc:[]};function s(e){let{components:t,...s}=e;return(0,o.kt)("wrapper",(0,a.Z)({},r,s,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Create a new project in Visual Studio:"),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"Create a new project",src:n(2835).Z,width:"1014",height:"675"})),(0,o.kt)("p",null,"Choose the ",(0,o.kt)("em",{parentName:"p"},"ASP.NET Core Empty")," template:"),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"Choose a template",src:n(2858).Z,width:"1014",height:"675"})),(0,o.kt)("p",null,"Name the project any way you want:"),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"Configure project",src:n(9386).Z,width:"1014",height:"675"})),(0,o.kt)("p",null,"Choose the ",(0,o.kt)("em",{parentName:"p"},".NET 6.0 (Long-term support)")," framework, and disable HTTPS as we don't need it for now:"),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"Additional information",src:n(646).Z,width:"1014",height:"675"})),(0,o.kt)("p",null,"Once the project is ready, create the following subfolders in your project folder:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"Controllers")," - this is where we're going to implement all the server endpoints"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"Models")," - here we're going to keep all the server-side logic that can be shared by different endpoints"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"wwwroot")," - this is where we're going to put all the client side assets (HTML, CSS, JavaScript, images, etc.)")))}s.isMDXComponent=!0},3301:(e,t,n)=>{n.d(t,{ZP:()=>s});var a=n(7462),o=(n(7294),n(4137));const r={toc:[]};function s(e){let{components:t,...s}=e;return(0,o.kt)("wrapper",(0,a.Z)({},r,s,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Next we will need to install the dependencies. In this case it will be a couple of modules\nof the official APS SDK. In the ",(0,o.kt)("em",{parentName:"p"},"Solution Explorer"),",\nright-click on ",(0,o.kt)("em",{parentName:"p"},"Dependencies"),", and then click on ",(0,o.kt)("em",{parentName:"p"},"Manage NuGet Packages..."),":"),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"Manage NuGet dependencies",src:n(8004).Z,width:"1107",height:"700"})),(0,o.kt)("p",null,"In the ",(0,o.kt)("em",{parentName:"p"},"NuGet Package Manager"),", switch to the ",(0,o.kt)("em",{parentName:"p"},"Browse")," tab, and search for and install\nthe following packages:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://www.nuget.org/packages/Autodesk.SdkManager"},"Autodesk.SdkManager")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://www.nuget.org/packages/Autodesk.Authentication"},"Autodesk.Authentication")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://www.nuget.org/packages/Autodesk.OSS"},"Autodesk.OSS")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://www.nuget.org/packages/Autodesk.DataManagement"},"Autodesk.DataManagement")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://www.nuget.org/packages/Autodesk.ModelDerivative"},"Autodesk.ModelDerivative"))))}s.isMDXComponent=!0},646:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/additional-info-6e29504487f7fb2a46fbd5641cdc4691.webp"},2858:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/choose-template-0eaf8f177132a1714c44dc3d5409762a.webp"},9386:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/configure-project-b48d3053b5ea342d552d7694d51e47ca.webp"},2835:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/create-project-3eac278d9a7b3b12327e8ef2caf2136e.webp"},8004:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/manage-nugets-1eab7cd026f7d73439c9063264b9b7e4.webp"}}]);