"use strict";(self.webpackChunkaps_tutorials_website=self.webpackChunkaps_tutorials_website||[]).push([[745],{4137:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var o=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},s=Object.keys(e);for(o=0;o<s.length;o++)n=s[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(o=0;o<s.length;o++)n=s[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=o.createContext({}),d=function(e){var t=o.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},p=function(e){var t=d(e.components);return o.createElement(c.Provider,{value:t},e.children)},l={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},u=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,s=e.originalType,c=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),u=d(n),m=r,j=u["".concat(c,".").concat(m)]||u[m]||l[m]||s;return n?o.createElement(j,a(a({ref:t},p),{},{components:n})):o.createElement(j,a({ref:t},p))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var s=n.length,a=new Array(s);a[0]=u;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:r,a[1]=i;for(var d=2;d<s;d++)a[d]=n[d];return o.createElement.apply(null,a)}return o.createElement.apply(null,n)}u.displayName="MDXCreateElement"},9678:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>p,default:()=>f,frontMatter:()=>d,metadata:()=>l,toc:()=>m});var o=n(7462),r=(n(7294),n(4137));const s={toc:[]};function a(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,o.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"First, let's include the Account Admin SDK, add the ",(0,r.kt)("inlineCode",{parentName:"p"},"@aps_sdk/account-admin")," library, and also create an instance of\nSDK client of ",(0,r.kt)("inlineCode",{parentName:"p"},"AdminClient")," at the beginning of ",(0,r.kt)("inlineCode",{parentName:"p"},"services/aps.js")," file:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="services/aps.js"',title:'"services/aps.js"'},"const { SdkManagerBuilder } = require('@aps_sdk/autodesk-sdkmanager');\nconst { AuthenticationClient, Scopes, ResponseType } = require('@aps_sdk/authentication');\nconst { DataManagementClient } = require('@aps_sdk/data-management');\n// highlight-start\nconst { AdminClient } = require('@aps_sdk/account-admin');\n// highlight-end\nconst { APS_CLIENT_ID, APS_CLIENT_SECRET, APS_CALLBACK_URL } = require('../config.js');\nconst service = module.exports = {};\nconst sdk = SdkManagerBuilder.create().build();\nconst authenticationClient = new AuthenticationClient(sdk);\nconst dataManagementClient = new DataManagementClient(sdk);\n// highlight-start\nconst adminClient = new AdminClient(sdk);\n// highlight-end\n")),(0,r.kt)("p",null,"Now append the following code to the end of the ",(0,r.kt)("inlineCode",{parentName:"p"},"services/aps.js")," file to support export & import projects and users:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="services/aps.js"',title:'"services/aps.js"'},'// ACC Admin APIs\nservice.getProjectsACC = async (accountId, token) => {\n    let allProjects = [];\n    let offset = 0;\n    let totalResults = 0;\n    do {\n        const resp = await adminClient.getProjects(token, accountId, {offset:offset});\n        allProjects = allProjects.concat(resp.results);\n        offset += resp.pagination.limit;\n        totalResults = resp.pagination.totalResults;\n    } while (offset < totalResults)\n    return allProjects;\n};\nservice.createProjectACC = async (accountId, projectInfo, token) =>{\n    const resp = await adminClient.createProject( token, accountId, projectInfo );\n    return resp;\n}\nservice.getProjectACC = async (projectId, token) => {\n    const resp = await adminClient.getProject( token, projectId );\n    return resp;\n};\nservice.getProjectUsersACC = async (projectId, token) => {\n    let allUsers = [];\n    let offset = 0;\n    let totalResults = 0;\n    do{\n        const resp = await adminClient.getProjectUsers( token, projectId, {offset:offset});\n        allUsers = allUsers.concat(resp.results);\n        offset += resp.pagination.limit;\n        totalResults = resp.pagination.totalResults;\n    }while (offset < totalResults) \n    return allUsers;\n};\nservice.addProjectAdminACC = async (projectId, email, token) => {\n    const userBody = {\n        "email": email,\n        "products": [{\n            "key": "projectAdministration",\n            "access": "administrator"\n        }, {\n            "key": "docs",\n            "access": "administrator"\n        }]\n    }\n    const resp = await adminClient.assignProjectUser( token, projectId, userBody );\n    return resp;\n}\nservice.importProjectUsersACC = async (projectId, projectUsers, token) => {\n    const resp = await adminClient.importProjectUsers( token, projectId, projectUsers )\n    return resp;\n}\n')),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"O m\xe9todo adminClient.getProjects retornar\xe1 todos os projetos de produ\xe7\xe3o desse hub,\n\xe9 diferente da API de Projetos GET de Gerenciamento de Dados, que\nretorna apenas os projetos que o usu\xe1rio atual est\xe1 envolvido.")))}a.isMDXComponent=!0;const i={toc:[]};function c(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,o.Z)({},i,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Crie um arquivo 'admin.js' na subpasta 'rotas' com o seguinte conte\xfado:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="routes/admin.js"',title:'"routes/admin.js"'},"const express = require('express');\nvar bodyParser = require('body-parser');\nconst { authRefreshMiddleware, getProjectsACC, getProjectACC, getProjectUsersACC, createProjectACC, importProjectUsersACC, addProjectAdminACC, getUserProfile } = require('../services/aps.js');\nlet router = express.Router();\nrouter.use(authRefreshMiddleware);\nrouter.get('/api/admin/projects', async function(req, res, next){\n    try {\n        const projects = await getProjectsACC( req.query.accountId, req.oAuthToken.access_token);\n        res.json(projects);\n    } catch (err) {\n        next(err);\n    }\n});\nrouter.get('/api/admin/project', async function(req, res, next){\n    let projectsList = [];\n    try {\n        const projectInfo = await getProjectACC( req.query.projectId, req.oAuthToken.access_token);\n        projectsList.push(projectInfo);\n        res.json(projectsList);\n    } catch (err) {\n        next(err);\n    }\n});\nrouter.post('/api/admin/projects', bodyParser.json(), async function (req, res, next) {\n    const accountId = req.body.accountId;\n    const projects = req.body.data;\n    let projectsCreated = [];\n    let projectsFailed = [];\n    await Promise.all(\n        projects.map(async (project) => {\n            try{\n                let projectInfo = await createProjectACC(accountId, project, req.oAuthToken.access_token);\n                projectsCreated.push(projectInfo.name);\n                while( projectInfo.status != \"active\" ){\n                    function delay(time) {\n                        return new Promise(resolve => setTimeout(resolve, time));\n                    }\n                    await delay(1000);    \n                    projectInfo = await getProjectACC( projectInfo.id, req.oAuthToken.access_token);\n                }\n                const profile = await getUserProfile(req.oAuthToken);\n                await addProjectAdminACC( projectInfo.id, profile.email, req.oAuthToken.access_token )\n            }catch(err){\n                console.warn(\"Failed to create project for: \"+ project.name + \" due to: \"+ err.message )\n                projectsFailed.push( project.name )\n            }\n        })\n    )\n    res.json({'Succeed':projectsCreated, 'Failed': projectsFailed });\n});\nrouter.get('/api/admin/project/users', async function (req, res, next) {\n    try {\n        const users = await getProjectUsersACC(req.query.projectId, req.oAuthToken.access_token);\n        res.json(users);\n    } catch (err) {\n        next(err);\n    }\n});\nrouter.post('/api/admin/project/users', bodyParser.json(), async function (req, res, next) {\n    const projectId = req.body.projectId;\n    const users = { \n        'users': req.body.data \n    };\n    try {\n        const usersRes = await importProjectUsersACC(projectId, users, req.oAuthToken.access_token);\n        res.json(usersRes);\n    } catch (err) {\n        next(err);\n    }\n});\nmodule.exports = router;\n")),(0,r.kt)("p",null,"E monte o roteador em nosso aplicativo de servidor modificando 'server.js':"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="server.js"',title:'"server.js"'},"const express = require('express');\nconst session = require('cookie-session');\nconst { PORT, SERVER_SESSION_SECRET } = require('./config.js');\nlet app = express();\napp.use(express.static('wwwroot'));\napp.use(session({ secret: SERVER_SESSION_SECRET, maxAge: 24 * 60 * 60 * 1000 }));\napp.use(require('./routes/auth.js'));\napp.use(require('./routes/hubs.js'));\n// highlight-start\napp.use(require('./routes/admin.js'));\n// highlight-end\napp.listen(PORT, () => console.log(`Server listening on port ${PORT}...`));\n")))}c.isMDXComponent=!0;const d={},p="Administrador de Conta",l={unversionedId:"tutorials/acc-admin/admin",id:"tutorials/acc-admin/admin",title:"Administrador de Conta",description:"Agora, \xe9 hora de implementar nosso servidor para suportar o acesso de administrador de conta, nesta etapa, vamos",source:"@site/i18n/pt/docusaurus-plugin-content-docs/current/03-tutorials/05-acc-admin/04-admin.mdx",sourceDirName:"03-tutorials/05-acc-admin",slug:"/tutorials/acc-admin/admin",permalink:"/pt/tutorials/acc-admin/admin",draft:!1,editUrl:"https://github.com/autodesk-platform-services/aps-tutorials-website/edit/master/docs/03-tutorials/05-acc-admin/04-admin.mdx",tags:[],version:"current",sidebarPosition:4,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Navega\xe7\xe3o do Projeto",permalink:"/pt/tutorials/acc-admin/data"},next:{title:"Estrutura da interface do usu\xe1rio",permalink:"/pt/tutorials/acc-admin/ui"}},u={},m=[{value:"Projetos &amp; Usu\xe1rios",id:"projetos--usu\xe1rios",level:2},{value:"Pontos de extremidade do servidor",id:"pontos-de-extremidade-do-servidor",level:2},{value:"Experimente",id:"experimente",level:2}],j={toc:m};function f(e){let{components:t,...s}=e;return(0,r.kt)("wrapper",(0,o.Z)({},j,s,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"administrador-de-conta"},"Administrador de Conta"),(0,r.kt)("p",null,"Agora, \xe9 hora de implementar nosso servidor para suportar o acesso de administrador de conta, nesta etapa, vamos\ncontinuar estendendo nosso servidor com base em ",(0,r.kt)("a",{parentName:"p",href:"https://aps.autodesk.com/en/docs/acc/v1/overview/field-guide/admin/"},"APIs de administra\xe7\xe3o de conta"),"\npara FETCH e CRIAR os dados de Projetos e Usu\xe1rios ACC:"),(0,r.kt)("h2",{id:"projetos--usu\xe1rios"},"Projetos & Usu\xe1rios"),(0,r.kt)("p",null,"First, let's add a couple of helper methods for getting and importing projects and users:"),(0,r.kt)(a,{mdxType:"NodeJsVsCodeHubs"}),(0,r.kt)("h2",{id:"pontos-de-extremidade-do-servidor"},"Pontos de extremidade do servidor"),(0,r.kt)("p",null,"Em seguida, vamos expor a nova funcionalidade ao c\xf3digo do lado do cliente por meio de outro\nconjunto de pontos de extremidade."),(0,r.kt)(c,{mdxType:"NodeJsVsCodeEndpoints"}),(0,r.kt)("h2",{id:"experimente"},"Experimente"),(0,r.kt)("p",null,"E \xe9 isso para o lado do servidor. Hora de experimentar!"),(0,r.kt)("p",null,"Inicie (ou reinicie) o aplicativo a partir do Visual Studio Code como de costume, "),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Use o ID(removendo ",(0,r.kt)("strong",{parentName:"li"},"b."),") de um hub ACC como voc\xea obt\xe9m na etapa anterior no endere\xe7o: http://localhost:8080/api/admin/projects?accountId={your-account-id}.\nNesse caso, o aplicativo de servidor deve responder com uma lista JSON de todos os projetos\ndispon\xedvel no hub especificado."),(0,r.kt)("li",{parentName:"ul"},"Use o ID do projeto como voc\xea obt\xe9m na etapa anterior, tente ligar para o endere\xe7o:\nhttp://localhost:8080/api/admin/project/users?projectId={your-project-id}, o aplicativo de servidor deve\nresponder com uma lista JSON de todos os usu\xe1rios deste projeto.")),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"Voc\xea pode obter uma lista de projetos diferente pelos 2 pontos de extremidade diferentes, aqui est\xe3o os explicativos:"),(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},"Com a API de Gerenciamento de Dados, ele retornar\xe1 todos os projetos que o usu\xe1rio atual est\xe1 envolvido."),(0,r.kt)("li",{parentName:"ul"},"Com a API de Administra\xe7\xe3o de Conta, ela retornar\xe1 todos os projetos na conta se o usu\xe1rio atual for Administrador de Conta."))),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Account Admin Response",src:n(1581).Z,width:"1921",height:"1054"})))}f.isMDXComponent=!0},1581:(e,t,n)=>{n.d(t,{Z:()=>o});const o=n.p+"assets/images/account-admin-ad482cceb50c48905b5b8d6902ef303c.webp"}}]);