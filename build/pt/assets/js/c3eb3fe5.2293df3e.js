"use strict";(self.webpackChunkaps_tutorials_website=self.webpackChunkaps_tutorials_website||[]).push([[898],{425:(e,t,a)=>{a.d(t,{Z:()=>s});var n=a(7294),o=a(6010);const r="tabItem_Ymn6";function s(e){let{children:t,hidden:a,className:s}=e;return n.createElement("div",{role:"tabpanel",className:(0,o.Z)(r,s),hidden:a},t)}},3992:(e,t,a)=>{a.d(t,{Z:()=>S});var n=a(7462),o=a(7294),r=a(6010),s=a(2957),i=a(6550),u=a(5238),l=a(3609),c=a(2560);function m(e){return function(e){return o.Children.map(e,(e=>{if((0,o.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))}(e).map((e=>{let{props:{value:t,label:a,attributes:n,default:o}}=e;return{value:t,label:a,attributes:n,default:o}}))}function d(e){const{values:t,children:a}=e;return(0,o.useMemo)((()=>{const e=t??m(a);return function(e){const t=(0,l.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,a])}function p(e){let{value:t,tabValues:a}=e;return a.some((e=>e.value===t))}function k(e){let{queryString:t=!1,groupId:a}=e;const n=(0,i.k6)(),r=function(e){let{queryString:t=!1,groupId:a}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!a)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return a??null}({queryString:t,groupId:a});return[(0,u._X)(r),(0,o.useCallback)((e=>{if(!r)return;const t=new URLSearchParams(n.location.search);t.set(r,e),n.replace({...n.location,search:t.toString()})}),[r,n])]}function g(e){const{defaultValue:t,queryString:a=!1,groupId:n}=e,r=d(e),[s,i]=(0,o.useState)((()=>function(e){let{defaultValue:t,tabValues:a}=e;if(0===a.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!p({value:t,tabValues:a}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${a.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const n=a.find((e=>e.default))??a[0];if(!n)throw new Error("Unexpected error: 0 tabValues");return n.value}({defaultValue:t,tabValues:r}))),[u,l]=k({queryString:a,groupId:n}),[m,g]=function(e){let{groupId:t}=e;const a=function(e){return e?`docusaurus.tab.${e}`:null}(t),[n,r]=(0,c.Nk)(a);return[n,(0,o.useCallback)((e=>{a&&r.set(e)}),[a,r])]}({groupId:n}),b=(()=>{const e=u??m;return p({value:e,tabValues:r})?e:null})();(0,o.useLayoutEffect)((()=>{b&&i(b)}),[b]);return{selectedValue:s,selectValue:(0,o.useCallback)((e=>{if(!p({value:e,tabValues:r}))throw new Error(`Can't select invalid tab value=${e}`);i(e),l(e),g(e)}),[l,g,r]),tabValues:r}}var b=a(1048);const h="tabList__CuJ",v="tabItem_LNqP";function w(e){let{className:t,block:a,selectedValue:i,selectValue:u,tabValues:l}=e;const c=[],{blockElementScrollPositionUntilNextRender:m}=(0,s.o5)(),d=e=>{const t=e.currentTarget,a=c.indexOf(t),n=l[a].value;n!==i&&(m(t),u(n))},p=e=>{let t=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const a=c.indexOf(e.currentTarget)+1;t=c[a]??c[0];break}case"ArrowLeft":{const a=c.indexOf(e.currentTarget)-1;t=c[a]??c[c.length-1];break}}t?.focus()};return o.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.Z)("tabs",{"tabs--block":a},t)},l.map((e=>{let{value:t,label:a,attributes:s}=e;return o.createElement("li",(0,n.Z)({role:"tab",tabIndex:i===t?0:-1,"aria-selected":i===t,key:t,ref:e=>c.push(e),onKeyDown:p,onClick:d},s,{className:(0,r.Z)("tabs__item",v,s?.className,{"tabs__item--active":i===t})}),a??t)})))}function f(e){let{lazy:t,children:a,selectedValue:n}=e;if(a=Array.isArray(a)?a:[a],t){const e=a.find((e=>e.props.value===n));return e?(0,o.cloneElement)(e,{className:"margin-top--md"}):null}return o.createElement("div",{className:"margin-top--md"},a.map(((e,t)=>(0,o.cloneElement)(e,{key:t,hidden:e.props.value!==n}))))}function y(e){const t=g(e);return o.createElement("div",{className:(0,r.Z)("tabs-container",h)},o.createElement(w,(0,n.Z)({},e,t)),o.createElement(f,(0,n.Z)({},e,t)))}function S(e){const t=(0,b.Z)();return o.createElement(y,(0,n.Z)({key:String(t)},e))}},415:(e,t,a)=>{a.d(t,{Z:()=>s});var n=a(7294),o=a(3992),r=a(425);function s(e){let{NodeJsVsCode:t,DotNetVsCode:a,DotNetVs2022:s}=e;return n.createElement(o.Z,{groupId:"development-environment"},n.createElement(r.Z,{value:"nodejs-vscode",label:"Node.js & VSCode",default:!0},n.createElement(t,null)),n.createElement(r.Z,{value:"dotnet-vscode",label:".NET 6 & VSCode"},n.createElement(a,null)),n.createElement(r.Z,{value:"dotnet-vs2022",label:".NET 6 & VS2022"},n.createElement(s,null)))}},3913:(e,t,a)=>{a.d(t,{Z:()=>i});var n=a(7294),o=a(2004);const r="wrapper_emgM",s="player_m1gG";function i(e){let{src:t}=e;return n.createElement("div",{className:r},n.createElement(o.Z,{className:s,url:t,playing:!0,loop:!0,width:"100%",height:"100%"}))}},2073:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>y,contentTitle:()=>w,default:()=>A,frontMatter:()=>v,metadata:()=>f,toc:()=>S});var n=a(7462),o=(a(7294),a(4137)),r=a(415);const s={toc:[]};function i(e){let{components:t,...a}=e;return(0,o.kt)("wrapper",(0,n.Z)({},s,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"As seguintes apis devem ser adicionadas ao arquivo 'DesignAutomationController.cs' antes da \xfaltima linha 'GetDefinedActivities' m\xe9todo."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"StartWorkitem")),(0,o.kt)("p",null,"\xc9 aqui que come\xe7amos a Automa\xe7\xe3o de Design. Esse ponto de extremidade tamb\xe9m carrega o arquivo de entrada em um bucket OSS e define que a sa\xedda deve ser salva no mesmo bucket. Para ajud\xe1-lo a identificar os arquivos, tanto a entrada quanto a sa\xedda usam o mesmo nome de arquivo original, mas com um sufixo (entrada ou sa\xedda) mais um carimbo de data/hora."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cs"},'    /// <summary>\n    /// Direct To S3\n    /// ref : https://aps.autodesk.com/blog/new-feature-support-direct-s3-migration-inputoutput-files-design-automation\n    /// </summary>\n    static void onUploadProgress(float progress, TimeSpan elapsed, List<UploadItemDesc> objects)\n    {\n        Console.WriteLine("progress: {0} elapsed: {1} objects: {2}", progress, elapsed, string.Join(", ", objects));\n    }\n    public static async Task<string> GetObjectId(string bucketKey, string objectKey, dynamic oauth, string fileSavePath)\n    {\n        try\n        {\n            ObjectsApi objectsApi = new ObjectsApi();\n            objectsApi.Configuration.AccessToken = oauth.access_token;\n            List<UploadItemDesc> uploadRes = await objectsApi.uploadResources(bucketKey,\n                new List<UploadItemDesc> {\n                    new UploadItemDesc(objectKey, await System.IO.File.ReadAllBytesAsync(fileSavePath))\n                },\n                null,\n                onUploadProgress,\n                null);\n            Console.WriteLine("**** Upload object(s) response(s):");\n            DynamicDictionary objValues = uploadRes[0].completed;\n            objValues.Dictionary.TryGetValue("objectId", out var id);\n            return id?.ToString();\n        }\n        catch (Exception ex)\n        {\n            Console.WriteLine($"Exception when preparing input url:{ex.Message}");\n            throw;\n        }\n    }\n    /// <summary>\n    /// Input for StartWorkitem\n    /// </summary>\n    public class StartWorkitemInput\n    {\n        public IFormFile inputFile { get; set; }\n        public string data { get; set; }\n    }\n    /// <summary>\n    /// Start a new workitem\n    /// </summary>\n    [HttpPost]\n    [Route("api/aps/designautomation/workitems")]\n    public async Task<IActionResult> StartWorkitem([FromForm] StartWorkitemInput input)\n    {\n        // basic input validation\n        JObject workItemData = JObject.Parse(input.data);\n        string widthParam = workItemData["width"].Value<string>();\n        string heigthParam = workItemData["height"].Value<string>();\n        string activityName = string.Format("{0}.{1}", NickName, workItemData["activityName"].Value<string>());\n        string browserConnectionId = workItemData["browserConnectionId"].Value<string>();\n        // save the file on the server\n        var fileSavePath = Path.Combine(_env.ContentRootPath, Path.GetFileName(input.inputFile.FileName));\n        using (var stream = new FileStream(fileSavePath, FileMode.Create)) await input.inputFile.CopyToAsync(stream);\n        // OAuth token\n        dynamic oauth = await OAuthController.GetInternalAsync();\n        // upload file to OSS Bucket\n        // 1. ensure bucket existis\n        string bucketKey = NickName.ToLower() + "-designautomation";\n        BucketsApi buckets = new BucketsApi();\n        buckets.Configuration.AccessToken = oauth.access_token;\n        try\n        {\n            PostBucketsPayload bucketPayload = new PostBucketsPayload(bucketKey, null, PostBucketsPayload.PolicyKeyEnum.Transient);\n            await buckets.CreateBucketAsync(bucketPayload, "US");\n        }\n        catch { }; // in case bucket already exists\n                    // 2. upload inputFile\n        string inputFileNameOSS = string.Format("{0}_input_{1}", DateTime.Now.ToString("yyyyMMddhhmmss"), Path.GetFileName(input.inputFile.FileName));// avoid overriding\n        // prepare workitem arguments\n        // 1. input file\n        XrefTreeArgument inputFileArgument = new XrefTreeArgument()\n        {\n            Url = await GetObjectId(bucketKey, inputFileNameOSS, oauth, fileSavePath),\n            Headers = new Dictionary<string, string>(){\n                { "Authorization", "Bearer " + oauth.access_token} }\n        };\n        // 2. input json\n        dynamic inputJson = new JObject();\n        inputJson.Width = widthParam;\n        inputJson.Height = heigthParam;\n        XrefTreeArgument inputJsonArgument = new XrefTreeArgument()\n        {\n            Url = "data:application/json, " + ((JObject)inputJson).ToString(Formatting.None).Replace("\\"", "\'")\n        };\n        // 3. output file\n        string outputFileNameOSS = string.Format("{0}_output_{1}", DateTime.Now.ToString("yyyyMMddhhmmss"), Path.GetFileName(input.inputFile.FileName)); // avoid overriding            \n        XrefTreeArgument outputFileArgument = new XrefTreeArgument()\n        {\n            Url = await GetObjectId(bucketKey, outputFileNameOSS, oauth, fileSavePath),\n            Headers = new Dictionary<string, string>()\n            {\n                { "Authorization", "Bearer " + oauth.access_token}\n            },\n            Verb = Verb.Put\n        };\n        if (System.IO.File.Exists(fileSavePath))\n        {\n            System.IO.File.Delete(fileSavePath);\n        }\n        // prepare & submit workitem            \n        WorkItem workItemSpec = new WorkItem()\n        {\n            ActivityId = activityName,\n            Arguments = new Dictionary<string, IArgument>()\n            {\n                { "inputFile", inputFileArgument },\n                { "inputJson",  inputJsonArgument },\n                { "outputFile", outputFileArgument }\n                \n            }\n        };\n        WorkItemStatus workItemStatus = await _designAutomation.CreateWorkItemAsync(workItemSpec);\n        MonitorWorkitem(oauth, browserConnectionId, workItemStatus, outputFileNameOSS);\n        return Ok(new { WorkItemId = workItemStatus.Id });\n    }\n')),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"MonitorWorkitem")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cs"},'    private async Task MonitorWorkitem(dynamic oauth, string browserConnectionId, WorkItemStatus workItemStatus, string outputFileNameOSS)\n    {\n        try\n        { \n            while (!workItemStatus.Status.IsDone())\n            {\n                await Task.Delay(TimeSpan.FromSeconds(2));\n                workItemStatus = await _designAutomation.GetWorkitemStatusAsync(workItemStatus.Id);\n                await _hubContext.Clients.Client(browserConnectionId).SendAsync("onComplete", workItemStatus.ToString());\n            }\n            using (var httpClient = new HttpClient())\n            {\n                byte[] bs = await httpClient.GetByteArrayAsync(workItemStatus.ReportUrl);\n                string report = System.Text.Encoding.Default.GetString(bs);\n                await _hubContext.Clients.Client(browserConnectionId).SendAsync("onComplete", report);\n            }\n            if (workItemStatus.Status == Status.Success)\n            {\n                ObjectsApi objectsApi = new ObjectsApi();\n                objectsApi.Configuration.AccessToken = oauth.access_token;\n                ApiResponse<dynamic> res = await objectsApi.getS3DownloadURLAsyncWithHttpInfo(\n                                            NickName.ToLower() + "-designautomation",\n                                            outputFileNameOSS, new Dictionary<string, object> {\n                                            { "minutesExpiration", 15.0 },\n                                            { "useCdn", true }\n                                            });\n                await _hubContext.Clients.Client(browserConnectionId).SendAsync("downloadResult", (string)(res.Data.url));\n                Console.WriteLine("Congrats!");\n            }\n        }\n        catch (Exception ex)\n        {\n            await _hubContext.Clients.Client(browserConnectionId).SendAsync("onComplete", ex.Message);\n            Console.WriteLine(ex.Message);\n        }      \n    }\n')),(0,o.kt)("admonition",{type:"note"},(0,o.kt)("p",{parentName:"admonition"},"No caso de um aplicativo do mundo real, voc\xea confiaria no ",(0,o.kt)("a",{parentName:"p",href:"https://aps.autodesk.com/en/docs/design-automation/v3/developers_guide/callbacks/"},"mecanismo de retorno de chamada")," da Automa\xe7\xe3o de Design em vez de usar sondagem para saber quando o item de trabalho terminou")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Limpar Conta")),(0,o.kt)("p",null,"Por \xfaltimo, mas n\xe3o menos importante, para ajud\xe1-lo a testar, essa api remove todos os appbundles e atividades da sua conta."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cs"},'    /// <summary>\n    /// Clear the accounts (for debugging purposes)\n    /// </summary>\n    [HttpDelete]\n    [Route("api/aps/designautomation/account")]\n    public async Task<IActionResult> ClearAccount()\n    {\n        // clear account\n        await _designAutomation.DeleteForgeAppAsync("me");\n        return Ok();\n    }\n')))}i.isMDXComponent=!0;const u={toc:[]};function l(e){let{components:t,...a}=e;return(0,o.kt)("wrapper",(0,n.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"As seguintes apis devem ser adicionadas ao arquivo 'DesignAutomation.js' antes da \xfaltima linha 'module.exports = router;'"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"StartWorkitem")),(0,o.kt)("p",null,"\xc9 aqui que realmente come\xe7amos o processo de Automa\xe7\xe3o de Projeto. Esse ponto de extremidade tamb\xe9m carrega o arquivo de entrada em um bucket OSS e define que a sa\xedda deve ser salva no mesmo bucket. Para ajud\xe1-lo a identificar os arquivos, tanto a entrada quanto a sa\xedda usam o mesmo nome de arquivo original, mas com um sufixo (entrada ou sa\xedda) mais um carimbo de data/hora."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js",metastring:"title=routes/DesignAutomation.js",title:"routes/DesignAutomation.js"},"/// <summary>\n/// Direct To S3\n/// ref : https://aps.autodesk.com/blog/new-feature-support-direct-s3-migration-inputoutput-files-design-automation\n/// </summary>\nconst getObjectId = async (bucketKey, objectKey, req) => {\n  try {\n    let contentStream = _fs.createReadStream(req.file.path);\n    //uploadResources takes an Object or Object array of resource to uplaod with their parameters,\n    //we are just passing only one object.\n    let uploadResponse = await new ForgeAPI.ObjectsApi().uploadResources(\n      bucketKey,\n      [\n        //object\n        {\n          objectKey: objectKey,\n          data: contentStream,\n          length: req.file.size,\n        },\n      ],\n      {\n        useAcceleration: false, //Whether or not to generate an accelerated signed URL\n        minutesExpiration: 20, //The custom expiration time within the 1 to 60 minutes range, if not specified, default is 2 minutes\n        onUploadProgress: (data) => console.warn(data), // function (progressEvent) => {}\n      },\n      req.oauth_client,\n      req.oauth_token\n    );\n    //lets check for the first and only entry.\n    if (uploadResponse[0].hasOwnProperty(\"error\") && uploadResponse[0].error) {\n      throw new Error(uploadResponse[0].completed.reason);\n    }\n    console.log(uploadResponse[0].completed.objectId);\n    return uploadResponse[0].completed.objectId;\n  } catch (ex) {\n    console.error(\"Failed to create ObjectID\\n\", ex);\n    throw ex;\n  }\n};\n/// <summary>\n/// Start a new workitem\n/// </summary>\nrouter.post('/aps/designautomation/workitems', multer({\n  dest: 'uploads/'\n}).single('inputFile'), async /*StartWorkitem*/(req, res) => {\n  const input = req.body;\n  // basic input validation\n  const workItemData = JSON.parse(input.data);\n  const widthParam = parseFloat(workItemData.width);\n  const heigthParam = parseFloat(workItemData.height);\n  const activityName = `${Utils.NickName}.${workItemData.activityName}`;\n  const browserConnectionId = workItemData.browserConnectionId;\n  // save the file on the server\n  const ContentRootPath = _path.resolve(_path.join(__dirname, '../..'));\n  const fileSavePath = _path.join(ContentRootPath, _path.basename(req.file.originalname));\n  // upload file to OSS Bucket\n  // 1. ensure bucket existis\n  const bucketKey = Utils.NickName.toLowerCase() + '-designautomation';\n  try {\n    let payload = new ForgeAPI.PostBucketsPayload();\n    payload.bucketKey = bucketKey;\n    payload.policyKey = 'transient'; // expires in 24h\n    await new ForgeAPI.BucketsApi().createBucket(payload, {}, req.oauth_client, req.oauth_token);\n  } catch (ex) {\n    // in case bucket already exists\n  }\n  // 2. upload inputFile\n  const inputFileNameOSS = `${new Date().toISOString().replace(/[-T:\\.Z]/gm, '').substring(0, 14)}_input_${_path.basename(req.file.originalname)}`; // avoid overriding\n  // prepare workitem arguments\n  const bearerToken = [\"Bearer\", req.oauth_token.access_token].join(\" \");\n  // 1. input file\n  const inputFileArgument = {\n    url: await getObjectId(bucketKey, inputFileNameOSS, req),\n    headers: { \"Authorization\": bearerToken }\n  };\n  // 2. input json\n  const inputJson = {\n    width: widthParam,\n    height: heigthParam\n  };\n  const inputJsonArgument = {\n    url: \"data:application/json, \" + JSON.stringify(inputJson).replace(/\"/g, \"'\")\n  };\n  // 3. output file\n  const outputFileNameOSS = `${new Date().toISOString().replace(/[-T:\\.Z]/gm, '').substring(0, 14)}_output_${_path.basename(req.file.originalname)}`; // avoid overriding  \n  const outputFileArgument = {\n    url: await getObjectId(bucketKey, outputFileNameOSS, req),\n    verb: dav3.Verb.put,\n    headers: { \"Authorization\": bearerToken }\n  };\n  // prepare & submit workitem\n  const workItemSpec = {\n    activityId: activityName,\n    arguments: {\n      inputFile: inputFileArgument,\n      inputJson: inputJsonArgument,\n      outputFile: outputFileArgument,\n    }\n  };\n  let workItemStatus = null;\n  try {\n    const api = await Utils.dav3API(req.oauth_token);\n    workItemStatus = await api.createWorkItem(workItemSpec);\n    monitorWorkItem(req.oauth_client, req.oauth_token, workItemStatus.id, browserConnectionId, outputFileNameOSS, inputFileNameOSS);\n  } catch (ex) {\n    console.error(ex);\n    return (res.status(500).json({\n      diagnostic: 'Failed to create a workitem'\n    }));\n  }\n  res.status(200).json({\n    workItemId: workItemStatus.id\n  });\n});\n")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"MonitorWorkItem")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"/// <summary>\n/// Monitor work item progress \n/// </summary>\nasync function monitorWorkItem(oauthClient, oauthToken, workItemId, browserConnectionId, outputFileName, inputFileName) {\n  const socketIO = require('../server').io;\n  try {\n    while (true) {\n      await new Promise((resolve) => setTimeout(resolve, 2000));\n      const api = await Utils.dav3API(oauthToken);\n      const status = await api.getWorkitemStatus(workItemId);\n      const bucketKey = Utils.NickName.toLowerCase() + '-designautomation';\n      const objectsApi = new ForgeAPI.ObjectsApi();\n      socketIO.to(browserConnectionId).emit('onComplete', status);\n      if (status.status == 'pending' || status.status === 'inprogress') {\n        continue;\n      }\n      let response = await fetch(status.reportUrl);\n      socketIO.to(browserConnectionId).emit('onComplete', await response.text());\n      if (status.status === 'success') {\n        response = await objectsApi.getS3DownloadURL(bucketKey, outputFileName, {\n          useAcceleration: false, minutesExpiration: 15\n        }, oauthClient, oauthToken);\n        socketIO.to(browserConnectionId).emit('downloadResult', response.body.url);\n      } else {\n        throw new Error('Work item failed...');\n      }\n      await objectsApi.deleteObject(bucketKey, inputFileName, oauthClient, oauthToken);\n      return;\n    }\n  } catch (err) {\n    console.error(err);\n    socketIO.to(browserConnectionId).emit('onError', err);\n  }\n}\n")),(0,o.kt)("admonition",{type:"note"},(0,o.kt)("p",{parentName:"admonition"},"No caso de um aplicativo do mundo real, voc\xea confiaria no ",(0,o.kt)("a",{parentName:"p",href:"https://aps.autodesk.com/en/docs/design-automation/v3/developers_guide/callbacks/"},"mecanismo de retorno de chamada")," da Automa\xe7\xe3o de Design em vez de usar sondagem para saber quando o item de trabalho terminou")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Limpar Conta")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'/// <summary>\n/// Clear the accounts (for debugging purpouses)\n/// </summary>\nrouter.delete(\n  "/aps/designautomation/account",\n  async (/*ClearAccount*/ req, res) => {\n    let api = await Utils.dav3API(req.oauth_token);\n    // clear account\n    await api.deleteForgeApp("me");\n    res.status(200).end();\n  }\n);\n')))}l.isMDXComponent=!0;var c=a(9012);const m={toc:[]};function d(e){let{components:t,...a}=e;return(0,o.kt)("wrapper",(0,n.Z)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"O projeto de ASP.NET do .NET Core que criamos no Visual Studio est\xe1 vazio, portanto, quando o iniciamos, nada \xe9 executado. Como nosso projeto designAutomationSample agora cont\xe9m uma p\xe1gina inicial em wwwroot/index.html ent\xe3o devemos ver seu conte\xfado no lan\xe7amento."),(0,o.kt)("p",null,'Visual Studio deve listar todos os navegadores dispon\xedveis no sistema para voc\xea escolher um para iniciar seu projeto. Basta selecionar um e clicar no \xedcone "play". O navegador deve abrir com sua p\xe1gina inicial.'),(0,o.kt)("img",{src:c.Z,style:{width:600}}))}d.isMDXComponent=!0;var p=a(1313);const k={toc:[]};function g(e){let{components:t,...a}=e;return(0,o.kt)("wrapper",(0,n.Z)({},k,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,'V\xe1 para o menu Depurar e selecione Iniciar depura\xe7\xe3o. A guia "Debug Console" deve aparecer na parte inferior, como mostrado abaixo'),(0,o.kt)("img",{src:p.Z,style:{width:600}}),(0,o.kt)("p",null,"Abra seu navegador e v\xe1 para http://localhost:8080."))}g.isMDXComponent=!0;var b=a(3913),h=a(9422);const v={},w="Executar item de trabalho",f={unversionedId:"tutorials/design-automation/execute-workitem",id:"tutorials/design-automation/execute-workitem",title:"Executar item de trabalho",description:"Um trabalho que executa uma atividade especificada, usando arquivos de entrada especificados e gerando arquivos de sa\xedda apropriados.",source:"@site/i18n/pt/docusaurus-plugin-content-docs/current/03-tutorials/04-design-automation/04-execute-workitem.mdx",sourceDirName:"03-tutorials/04-design-automation",slug:"/tutorials/design-automation/execute-workitem",permalink:"/pt/tutorials/design-automation/execute-workitem",draft:!1,editUrl:"https://github.com/autodesk-platform-services/aps-tutorials-website/edit/master/docs/03-tutorials/04-design-automation/04-execute-workitem.mdx",tags:[],version:"current",sidebarPosition:4,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Definir Atividade",permalink:"/pt/tutorials/design-automation/define-activity"},next:{title:"Administrador ACC",permalink:"/pt/tutorials/acc-admin/"}},y={},S=[{value:"Executar &amp; Debug",id:"executar--debug",level:2},{value:"Usando o exemplo",id:"usando-o-exemplo",level:2},{value:"Solu\xe7\xe3o de problemas",id:"solu\xe7\xe3o-de-problemas",level:2}],I={toc:S};function A(e){let{components:t,...a}=e;return(0,o.kt)("wrapper",(0,n.Z)({},I,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"executar-item-de-trabalho"},"Executar item de trabalho"),(0,o.kt)("p",null,"Um trabalho que executa uma atividade especificada, usando arquivos de entrada especificados e gerando arquivos de sa\xedda apropriados."),(0,o.kt)("p",null,'A rela\xe7\xe3o entre uma Atividade e WorkItem pode ser pensada como uma "defini\xe7\xe3o de fun\xe7\xe3o" e "chamada de fun\xe7\xe3o", respectivamente. A Atividade especifica o(s) AppBundle(s) a serem usados, que, por sua vez, especificam o mecanismo a ser usado. O Workitem \xe9 ent\xe3o chamado para execut\xe1-los.'),(0,o.kt)("p",null,"Neste exemplo de tutorial, o item de trabalho especifica a URL do arquivo de entrada, os dados JSON de entrada com os novos valores de par\xe2metro e a URL de destino do arquivo de sa\xedda. Este exemplo carregar\xe1 o arquivo de entrada em um bucket OSS antes de iniciar o item de trabalho."),(0,o.kt)(r.Z,{NodeJsVsCode:l,DotNetVsCode:i,DotNetVs2022:i,mdxType:"EnvTabs"}),(0,o.kt)("p",null,"Tudo pronto!"),(0,o.kt)("h2",{id:"executar--debug"},"Executar & Debug"),(0,o.kt)("p",null,"Agora que seu aplicativo est\xe1 pronto, \xe9 hora de execut\xe1-lo. \xc9 aqui que podemos testar e verificar poss\xedveis erros (via depura\xe7\xe3o)."),(0,o.kt)("h2",{id:"usando-o-exemplo"},"Usando o exemplo"),(0,o.kt)("p",null,"Na parte superior, clique em ",(0,o.kt)("strong",{parentName:"p"},"Configurar")," para definir AppBundle & Activity. Isso s\xf3 precisa ser feito uma vez. Especifique as novas 'largura' e 'altura' no painel esquerdo, selecione o 'arquivo de entrada' e clique em 'Iniciar item de trabalho'. O painel direito deve mostrar os resultados."),(0,o.kt)("p",null,"Voc\xea pode encontrar ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/autodesk-platform-services/aps-design-automation-dotnet/tree/master/sample%20files"},"arquivos de exemplo aqui"),"."),(0,o.kt)("admonition",{type:"caution"},(0,o.kt)("p",{parentName:"admonition"},"Se o c\xf3digo do plugin mudar, voc\xea precisar\xe1 carregar um novo AppBundle e aumentar a vers\xe3o (por exemplo, v1 para v2). Este exemplo criar\xe1 uma nova vers\xe3o sempre que um novo AppBundle for carregado.")),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"os arquivos de entrada e sa\xedda s\xe3o salvos em buckets OSS, voc\xea pode usar ","[View Models]","(.. /simple-viewer/) tutorial para visualiz\xe1-los.")),(0,o.kt)(b.Z,{src:h.Z,mdxType:"ResponsiveVideo"}),(0,o.kt)("h2",{id:"solu\xe7\xe3o-de-problemas"},"Solu\xe7\xe3o de problemas"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"1. O painel de resultados n\xe3o mostra as informa\xe7\xf5es completas")),(0,o.kt)("p",null,"Verifique se o ",(0,o.kt)("strong",{parentName:"p"},"ngrok")," est\xe1 em execu\xe7\xe3o e n\xe3o expirou. Verifique se o endere\xe7o ngrok est\xe1 especificado corretamente na vari\xe1vel de ambiente."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"2. Item de trabalho executar, mas o resultado n\xe3o \xe9 o esperado")),(0,o.kt)("p",null,"Considere usar o bot\xe3o ",(0,o.kt)("strong",{parentName:"p"},"Limpar conta"),". Isso remove todos os AppBundles & Atividades em sua conta. Em seguida, defina-os novamente."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"3. N\xe3o \xe9 poss\xedvel ver meu AppBundle no formul\xe1rio Configura\xe7\xe3o")),(0,o.kt)("p",null,"Os pacotes ZIP s\xe3o copiados para os 'pacotes' depois que voc\xea compila o respectivo plugin. Certifique-se de que o evento 'Post-build' esteja corretamente definido e executado ap\xf3s a compila\xe7\xe3o."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"4. Garantindo que a DLL correta foi carregada")),(0,o.kt)("p",null,"Um truque f\xe1cil para garantir que a DLL correta foi carregada no Design Automation \xe9 verificar sua data. ","[Esta resposta StackOverflow]"," (",(0,o.kt)("a",{parentName:"p",href:"https://stackoverflow.com/a/1600990"},"https://stackoverflow.com/a/1600990"),") mostra como obter a Data do Vinculador (ou seja, quando a DLL foi compilada), com isso voc\xea pode mostr\xe1-la no in\xedcio do seu c\xf3digo. Observe que as datas est\xe3o no fuso hor\xe1rio do servidor."),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Plugin \xe9 escrito em 'C#' independentemente da linguagem do servidor.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cs"},'LogTrace("DLL {0} compiled on {1}",\n    System.IO.Path.GetFileName(System.Reflection.Assembly.GetExecutingAssembly().Location),\n    GetLinkerTime(System.Reflection.Assembly.GetExecutingAssembly()));\n')),(0,o.kt)("p",null,"Pronto? Vamos execut\xe1-lo!"),(0,o.kt)(r.Z,{NodeJsVsCode:g,DotNetVsCode:d,DotNetVs2022:d,mdxType:"EnvTabs"}))}A.isMDXComponent=!0},9012:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/vs2022-basicui-run-0b3e7cb65c75f2ed504fecba0a20c6de.webp"},1313:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/vscode-nodejs-basicui-run-7f1f37d9119d5d129da5ea0e192a77a5.webp"},9422:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/medias/modify-your-models-4f9f7bd794c480da8b00321373299bb6.mp4"}}]);