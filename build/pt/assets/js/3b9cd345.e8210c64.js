"use strict";(self.webpackChunkaps_tutorials_website=self.webpackChunkaps_tutorials_website||[]).push([[131],{4137:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var a=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},s=Object.keys(e);for(a=0;a<s.length;a++)n=s[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(a=0;a<s.length;a++)n=s[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=a.createContext({}),u=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},c=function(e){var t=u(e.components);return a.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},p=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,s=e.originalType,l=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),p=u(n),m=o,v=p["".concat(l,".").concat(m)]||p[m]||d[m]||s;return n?a.createElement(v,r(r({ref:t},c),{},{components:n})):a.createElement(v,r({ref:t},c))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var s=n.length,r=new Array(s);r[0]=p;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:o,r[1]=i;for(var u=2;u<s;u++)r[u]=n[u];return a.createElement.apply(null,r)}return a.createElement.apply(null,n)}p.displayName="MDXCreateElement"},425:(e,t,n)=>{n.d(t,{Z:()=>r});var a=n(7294),o=n(6010);const s="tabItem_Ymn6";function r(e){let{children:t,hidden:n,className:r}=e;return a.createElement("div",{role:"tabpanel",className:(0,o.Z)(s,r),hidden:n},t)}},3992:(e,t,n)=>{n.d(t,{Z:()=>j});var a=n(7462),o=n(7294),s=n(6010),r=n(2957),i=n(6550),l=n(5238),u=n(3609),c=n(2560);function d(e){return function(e){return o.Children.map(e,(e=>{if((0,o.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))}(e).map((e=>{let{props:{value:t,label:n,attributes:a,default:o}}=e;return{value:t,label:n,attributes:a,default:o}}))}function p(e){const{values:t,children:n}=e;return(0,o.useMemo)((()=>{const e=t??d(n);return function(e){const t=(0,u.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function m(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function v(e){let{queryString:t=!1,groupId:n}=e;const a=(0,i.k6)(),s=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,l._X)(s),(0,o.useCallback)((e=>{if(!s)return;const t=new URLSearchParams(a.location.search);t.set(s,e),a.replace({...a.location,search:t.toString()})}),[s,a])]}function b(e){const{defaultValue:t,queryString:n=!1,groupId:a}=e,s=p(e),[r,i]=(0,o.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!m({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const a=n.find((e=>e.default))??n[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:t,tabValues:s}))),[l,u]=v({queryString:n,groupId:a}),[d,b]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[a,s]=(0,c.Nk)(n);return[a,(0,o.useCallback)((e=>{n&&s.set(e)}),[n,s])]}({groupId:a}),g=(()=>{const e=l??d;return m({value:e,tabValues:s})?e:null})();(0,o.useLayoutEffect)((()=>{g&&i(g)}),[g]);return{selectedValue:r,selectValue:(0,o.useCallback)((e=>{if(!m({value:e,tabValues:s}))throw new Error(`Can't select invalid tab value=${e}`);i(e),u(e),b(e)}),[u,b,s]),tabValues:s}}var g=n(1048);const f="tabList__CuJ",k="tabItem_LNqP";function y(e){let{className:t,block:n,selectedValue:i,selectValue:l,tabValues:u}=e;const c=[],{blockElementScrollPositionUntilNextRender:d}=(0,r.o5)(),p=e=>{const t=e.currentTarget,n=c.indexOf(t),a=u[n].value;a!==i&&(d(t),l(a))},m=e=>{let t=null;switch(e.key){case"Enter":p(e);break;case"ArrowRight":{const n=c.indexOf(e.currentTarget)+1;t=c[n]??c[0];break}case"ArrowLeft":{const n=c.indexOf(e.currentTarget)-1;t=c[n]??c[c.length-1];break}}t?.focus()};return o.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.Z)("tabs",{"tabs--block":n},t)},u.map((e=>{let{value:t,label:n,attributes:r}=e;return o.createElement("li",(0,a.Z)({role:"tab",tabIndex:i===t?0:-1,"aria-selected":i===t,key:t,ref:e=>c.push(e),onKeyDown:m,onClick:p},r,{className:(0,s.Z)("tabs__item",k,r?.className,{"tabs__item--active":i===t})}),n??t)})))}function h(e){let{lazy:t,children:n,selectedValue:a}=e;if(n=Array.isArray(n)?n:[n],t){const e=n.find((e=>e.props.value===a));return e?(0,o.cloneElement)(e,{className:"margin-top--md"}):null}return o.createElement("div",{className:"margin-top--md"},n.map(((e,t)=>(0,o.cloneElement)(e,{key:t,hidden:e.props.value!==a}))))}function w(e){const t=b(e);return o.createElement("div",{className:(0,s.Z)("tabs-container",f)},o.createElement(y,(0,a.Z)({},e,t)),o.createElement(h,(0,a.Z)({},e,t)))}function j(e){const t=(0,g.Z)();return o.createElement(w,(0,a.Z)({key:String(t)},e))}},415:(e,t,n)=>{n.d(t,{Z:()=>r});var a=n(7294),o=n(3992),s=n(425);function r(e){let{NodeJsVsCode:t,DotNetVsCode:n,DotNetVs2022:r}=e;return a.createElement(o.Z,{groupId:"development-environment"},a.createElement(s.Z,{value:"nodejs-vscode",label:"Node.js & VSCode",default:!0},a.createElement(t,null)),a.createElement(s.Z,{value:"dotnet-vscode",label:".NET 6 & VSCode"},a.createElement(n,null)),a.createElement(s.Z,{value:"dotnet-vs2022",label:".NET 6 & VS2022"},a.createElement(r,null)))}},9785:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>w,contentTitle:()=>y,default:()=>N,frontMatter:()=>k,metadata:()=>h,toc:()=>j});var a=n(7462),o=(n(7294),n(4137)),s=n(415);const r={toc:[]};function i(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,a.Z)({},r,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Vamos implementar o OSS (",(0,o.kt)("a",{parentName:"p",href:"https://aps.autodesk.com/en/docs/data/v2/developers_guide/basics/#object-storage-service-oss"},"Object Storage Service"),")\nl\xf3gica da nossa aplica\xe7\xe3o de servidor. Adicione o seguinte c\xf3digo ao final do arquivo 'services/aps.js':"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="services/aps.js"',title:'"services/aps.js"'},"service.ensureBucketExists = async (bucketKey) => {\n    const { access_token } = await service.getInternalToken();\n    try {\n        await ossClient.getBucketDetails(access_token, bucketKey);\n    } catch (err) {\n        if (err.axiosError.response.status === 404) {\n            await ossClient.createBucket(access_token, CreateBucketXAdsRegionEnum.Us, {\n                bucketKey: bucketKey,\n                policyKey: CreateBucketsPayloadPolicyKeyEnum.Temporary\n            });\n        } else {\n            throw err;  \n        }\n    }\n};\nservice.listObjects = async () => {\n    await service.ensureBucketExists(APS_BUCKET);\n    const { access_token } = await service.getInternalToken();\n    let resp = await ossClient.getObjects(access_token, APS_BUCKET, { limit: 64 });\n    let objects = resp.items;\n    while (resp.next) {\n        const startAt = new URL(resp.next).searchParams.get('startAt');\n        resp = await ossClient.getObjects(access_token, APS_BUCKET, { limit: 64, startAt });\n        objects = objects.concat(resp.items);\n    }\n    return objects;\n};\nservice.uploadObject = async (objectName, filePath) => {\n    await service.ensureBucketExists(APS_BUCKET);\n    const { access_token } = await service.getInternalToken();\n    const obj = await ossClient.upload(APS_BUCKET, objectName, filePath, access_token);\n    return obj;\n};\n")),(0,o.kt)("p",null,"A fun\xe7\xe3o 'ensureBucketExists' simplesmente tentar\xe1 solicitar informa\xe7\xf5es adicionais\nsobre um bucket espec\xedfico usando o SDK do APS e se a resposta\ndo APS \xe9 '404 Not Found', ele tentar\xe1 criar um novo bucket com esse nome."),(0,o.kt)("p",null,"Como voc\xea pode ver, o m\xe9todo 'getObjects' (respons\xe1vel por listar arquivos\nem um bucket de Gerenciamento de Dados) usa pagina\xe7\xe3o. Em nosso c\xf3digo, n\xf3s simplesmente iteramos por todas as p\xe1ginas\ne retornar todos os arquivos do bucket do nosso aplicativo em uma \xfanica lista."))}i.isMDXComponent=!0;const l={toc:[]};function u(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,a.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Vamos implementar a l\xf3gica para converter designs para exibi\xe7\xe3o e para verificar o status de\nas convers\xf5es. Adicione o seguinte c\xf3digo ao final do arquivo 'services/aps.js':"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="services/aps.js"',title:'"services/aps.js"'},"service.translateObject = async (urn, rootFilename) => {\n    const { access_token } = await service.getInternalToken();\n    const job = await modelDerivativeClient.startJob(access_token, {\n        input: {\n            urn,\n            compressedUrn: !!rootFilename,\n            rootFilename\n        },\n        output: {\n            formats: [{\n                views: [View._2d, View._3d],\n                type: Type.Svf\n            }]\n        }\n    });\n    return job.result;\n};\nservice.getManifest = async (urn) => {\n    const { access_token } = await service.getInternalToken();\n    try {\n        const manifest = await modelDerivativeClient.getManifest(access_token, urn);\n        return manifest;\n    } catch (err) {\n        if (err.axiosError.response.status === 404) {\n            return null;\n        } else {\n            throw err;\n        }\n    }\n};\nservice.urnify = (id) => Buffer.from(id).toString('base64').replace(/=/g, '');\n")))}u.isMDXComponent=!0;const c={toc:[]};function d(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Crie um arquivo 'models.js' na subpasta 'routes' com o seguinte c\xf3digo:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="routes/models.js"',title:'"routes/models.js"'},"const express = require('express');\nconst formidable = require('express-formidable');\nconst { listObjects, uploadObject, translateObject, getManifest, urnify } = require('../services/aps.js');\nlet router = express.Router();\nrouter.get('/api/models', async function (req, res, next) {\n    try {\n        const objects = await listObjects();\n        res.json(objects.map(o => ({\n            name: o.objectKey,\n            urn: urnify(o.objectId)\n        })));\n    } catch (err) {\n        next(err);\n    }\n});\nrouter.get('/api/models/:urn/status', async function (req, res, next) {\n    try {\n        const manifest = await getManifest(req.params.urn);\n        if (manifest) {\n            let messages = [];\n            if (manifest.derivatives) {\n                for (const derivative of manifest.derivatives) {\n                    messages = messages.concat(derivative.messages || []);\n                    if (derivative.children) {\n                        for (const child of derivative.children) {\n                            messages.concat(child.messages || []);\n                        }\n                    }\n                }\n            }\n            res.json({ status: manifest.status, progress: manifest.progress, messages });\n        } else {\n            res.json({ status: 'n/a' });\n        }\n    } catch (err) {\n        next(err);\n    }\n});\nrouter.post('/api/models', formidable({ maxFileSize: Infinity }), async function (req, res, next) {\n    const file = req.files['model-file'];\n    if (!file) {\n        res.status(400).send('The required field (\"model-file\") is missing.');\n        return;\n    }\n    try {\n        const obj = await uploadObject(file.name, file.path);\n        await translateObject(urnify(obj.objectId), req.fields['model-zip-entrypoint']);\n        res.json({\n            name: obj.objectKey,\n            urn: urnify(obj.objectId)\n        });\n    } catch (err) {\n        next(err);\n    }\n});\nmodule.exports = router;\n")),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"O middleware 'formidable()' usado no manipulador de solicita\xe7\xf5es 'POST' garantir\xe1 que qualquer\nO conte\xfado 'multipart/form-data' que vem com a solicita\xe7\xe3o \xe9 analisado e est\xe1 dispon\xedvel no 'req.files'\ne propriedades 'req.fields'.")),(0,o.kt)("p",null,"E monte o roteador em nosso aplicativo de servidor modificando 'server.js':"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="server.js"',title:'"server.js"'},"const express = require('express');\nconst { PORT } = require('./config.js');\nlet app = express();\napp.use(express.static('wwwroot'));\napp.use(require('./routes/auth.js'));\n// highlight-start\napp.use(require('./routes/models.js'));\n// highlight-end\napp.listen(PORT, function () { console.log(`Server listening on port ${PORT}...`); });\n")),(0,o.kt)("p",null,"O roteador lidar\xe1 com 3 tipos de solicita\xe7\xf5es:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"'GET /api/models' - quando o cliente deseja obter a lista de todos os modelos dispon\xedveis para visualiza\xe7\xe3o"),(0,o.kt)("li",{parentName:"ul"},"'GET /api/models/:urn/status' - usado para verificar o status da convers\xe3o (incluindo mensagens de erro, se houver)"),(0,o.kt)("li",{parentName:"ul"},"'POST /api/models' - quando o cliente deseja fazer o upload de um novo modelo e iniciar sua tradu\xe7\xe3o")))}d.isMDXComponent=!0;const p={toc:[]};function m(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Crie um 'APS. Oss.cs' na pasta 'Modelos'. \xc9 aqui que vai implementar\ntodo o OSS (",(0,o.kt)("a",{parentName:"p",href:"https://aps.autodesk.com/en/docs/data/v2/developers_guide/basics/#object-storage-service-oss"},"Object Storage Service"),")\nl\xf3gica da nossa aplica\xe7\xe3o de servidor. Preencha o novo arquivo com o seguinte c\xf3digo:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Models/APS.Oss.cs"',title:'"Models/APS.Oss.cs"'},'using System;\nusing System.Collections.Generic;\nusing System.IO;\nusing System.Threading.Tasks;\nusing Autodesk.Oss;\nusing Autodesk.Oss.Model;\npublic partial class APS\n{\n    private async Task EnsureBucketExists(string bucketKey)\n    {\n        const string region = "US";\n        var auth = await GetInternalToken();\n        var ossClient = new OssClient(_sdkManager);\n        try\n        {\n            await ossClient.GetBucketDetailsAsync(bucketKey, accessToken: auth.AccessToken);\n        }\n        catch (OssApiException ex)\n        {\n            if (ex.HttpResponseMessage.StatusCode == System.Net.HttpStatusCode.NotFound)\n            {\n                var payload = new CreateBucketsPayload\n                {\n                    BucketKey = bucketKey,\n                    PolicyKey = "Persistent"\n                };\n                await ossClient.CreateBucketAsync(region, payload, auth.AccessToken);\n            }\n            else\n            {\n                throw;\n            }\n        }\n    }\n    public async Task<ObjectDetails> UploadModel(string objectName, string pathToFile)\n    {\n        await EnsureBucketExists(_bucket);\n        var auth = await GetInternalToken();\n        var ossClient = new OssClient(_sdkManager);\n        var objectDetails = await ossClient.Upload(_bucket, objectName, pathToFile, auth.AccessToken, new System.Threading.CancellationToken());\n        return objectDetails;\n    }\n    public async Task<IEnumerable<ObjectDetails>> GetObjects()\n    {\n        await EnsureBucketExists(_bucket);\n        var auth = await GetInternalToken();\n        var ossClient = new OssClient(_sdkManager);\n        const int PageSize = 64;\n        var results = new List<ObjectDetails>();\n        var response = await ossClient.GetObjectsAsync(_bucket, PageSize, accessToken: auth.AccessToken);\n        results.AddRange(response.Items);\n        while (!string.IsNullOrEmpty(response.Next))\n        {\n            var queryParams = Microsoft.AspNetCore.WebUtilities.QueryHelpers.ParseQuery(new Uri(response.Next).Query);\n            response = await ossClient.GetObjectsAsync(_bucket, PageSize, startAt: queryParams["startAt"], accessToken: auth.AccessToken);\n            results.AddRange(response.Items);\n        }\n        return results;\n    }\n}\n')),(0,o.kt)("p",null,"O m\xe9todo 'EnsureBucketExists' simplesmente tentar\xe1 solicitar informa\xe7\xf5es adicionais\nsobre um bucket espec\xedfico e, se a resposta do APS for '404 N\xe3o encontrado', ele ser\xe1\nTente criar um novo bucket com esse nome. Se nenhum nome de bucket for fornecido por meio de\nvari\xe1veis de ambiente, geramos uma anexando o sufixo '-basic-app' ao nosso\nID do cliente do aplicativo."),(0,o.kt)("p",null,"O m\xe9todo 'GetObjects' percorre todos os objetos no bucket e retorna seu nome e URN\n(o ID codificado em base64 que ser\xe1 usado posteriormente ao se comunicar com o servi\xe7o Derivada de Modelo)."))}m.isMDXComponent=!0;const v={toc:[]};function b(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,a.Z)({},v,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Crie outro arquivo na subpasta 'Modelos' e chame-o de 'APS'. Deriv.cs'. \xc9 aqui que\nimplementar\xe1 a l\xf3gica para converter designs para visualiza\xe7\xe3o e para verificar o status de\nas convers\xf5es. Preencha o novo arquivo com o seguinte c\xf3digo:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Models/APS.Deriv.cs"',title:'"Models/APS.Deriv.cs"'},'using System.Collections.Generic;\nusing System.Threading.Tasks;\nusing Autodesk.ModelDerivative;\nusing Autodesk.ModelDerivative.Model;\npublic record TranslationStatus(string Status, string Progress, IEnumerable<string>? Messages);\npublic partial class APS\n{\n    public static string Base64Encode(string plainText)\n    {\n        var plainTextBytes = System.Text.Encoding.UTF8.GetBytes(plainText);\n        return System.Convert.ToBase64String(plainTextBytes).TrimEnd(\'=\');\n    }\n    public async Task<Job> TranslateModel(string objectId, string rootFilename)\n    {\n        var auth = await GetInternalToken();\n        var modelDerivativeClient = new ModelDerivativeClient(_sdkManager);\n        var payload = new JobPayload\n        {\n            Input = new JobPayloadInput\n            {\n                Urn = Base64Encode(objectId)\n            },\n            Output = new JobPayloadOutput\n            {\n                Formats = new List<JobPayloadFormat>\n                {\n                    new JobSvf2OutputFormat\n                    {\n                        Views = new List<View>\n                        {\n                            View._2d,\n                            View._3d\n                        }\n                    }\n                },\n                Destination = new JobPayloadOutputDestination()\n                {\n                    Region = Region.US\n                }\n            }\n        };\n        if (!string.IsNullOrEmpty(rootFilename))\n        {\n            payload.Input.RootFilename = rootFilename;\n            payload.Input.CompressedUrn = true;\n        }\n        var job = await modelDerivativeClient.StartJobAsync(jobPayload: payload, accessToken: auth.AccessToken);\n        return job;\n    }\n    public async Task<TranslationStatus> GetTranslationStatus(string urn)\n    {\n        var auth = await GetInternalToken();\n        var modelDerivativeClient = new ModelDerivativeClient(_sdkManager);\n        try\n        {\n            var manifest = await modelDerivativeClient.GetManifestAsync(urn, accessToken: auth.AccessToken);\n            var messages = new List<string>();\n            return new TranslationStatus(manifest.Status, manifest.Progress, messages);\n        }\n        catch (ModelDerivativeApiException ex)\n        {\n            if (ex.HttpResponseMessage.StatusCode == System.Net.HttpStatusCode.NotFound)\n            {\n                return new TranslationStatus("n/a", "", null);\n            }\n            else\n            {\n                throw;\n            }\n        }\n    }\n}\n')))}b.isMDXComponent=!0;const g={toc:[]};function f(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,a.Z)({},g,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Crie um arquivo 'ModelsController.cs' na subpasta 'Controladores' com o seguinte conte\xfado:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Controllers/ModelsController.cs"',title:'"Controllers/ModelsController.cs"'},'using System.Collections.Generic;\nusing System.IO;\nusing System.Linq;\nusing System.Threading.Tasks;\nusing Microsoft.AspNetCore.Http;\nusing Microsoft.AspNetCore.Mvc;\n[ApiController]\n[Route("api/[controller]")]\npublic class ModelsController : ControllerBase\n{\n    public record BucketObject(string name, string urn);\n    private readonly APS _aps;\n    public ModelsController(APS aps)\n    {\n        _aps = aps;\n    }\n    [HttpGet()]\n    public async Task<IEnumerable<BucketObject>> GetModels()\n    {\n        var objects = await _aps.GetObjects();\n        return from o in objects\n               select new BucketObject(o.ObjectKey, APS.Base64Encode(o.ObjectId));\n    }\n    [HttpGet("{urn}/status")]\n    public async Task<TranslationStatus> GetModelStatus(string urn)\n    {\n        var status = await _aps.GetTranslationStatus(urn);\n        return status;\n    }\n    public class UploadModelForm\n    {\n        [FromForm(Name = "model-zip-entrypoint")]\n        public string? Entrypoint { get; set; }\n        [FromForm(Name = "model-file")]\n        public IFormFile File { get; set; }\n    }\n    [HttpPost(), DisableRequestSizeLimit]\n    public async Task<BucketObject> UploadAndTranslateModel([FromForm] UploadModelForm form)\n    {\n        var tempFilePath = Path.GetTempFileName();\n        using (var stream = System.IO.File.Create(tempFilePath))\n        {\n            await form.File.CopyToAsync(stream);\n        }\n        var obj = await _aps.UploadModel(form.File.FileName, tempFilePath);\n        var job = await _aps.TranslateModel(obj.ObjectId, form.Entrypoint);\n        return new BucketObject(obj.ObjectKey, job.Urn);\n    }\n}\n')),(0,o.kt)("p",null,"O controlador lidar\xe1 com 3 tipos de solicita\xe7\xf5es:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"'GET /api/models' - quando o cliente deseja obter a lista de todos os modelos dispon\xedveis para visualiza\xe7\xe3o"),(0,o.kt)("li",{parentName:"ul"},"'GET /api/models/:urn/status' - usado para verificar o status da convers\xe3o (incluindo mensagens de erro, se houver)"),(0,o.kt)("li",{parentName:"ul"},"'POST /api/models' - quando o cliente deseja fazer o upload de um novo modelo e iniciar sua tradu\xe7\xe3o")))}f.isMDXComponent=!0;const k={},y="Dados & Derivativos",h={unversionedId:"tutorials/simple-viewer/data",id:"tutorials/simple-viewer/data",title:"Dados & Derivativos",description:"Nesta etapa, estenderemos nosso servidor para que possamos listar modelos, carreg\xe1-los,",source:"@site/i18n/pt/docusaurus-plugin-content-docs/current/03-tutorials/01-simple-viewer/03-data.mdx",sourceDirName:"03-tutorials/01-simple-viewer",slug:"/tutorials/simple-viewer/data",permalink:"/pt/tutorials/simple-viewer/data",draft:!1,editUrl:"https://github.com/autodesk-platform-services/aps-tutorials-website/edit/master/docs/03-tutorials/01-simple-viewer/03-data.mdx",tags:[],version:"current",sidebarPosition:3,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Autentica\xe7\xe3o",permalink:"/pt/tutorials/simple-viewer/auth"},next:{title:"Visualizador & UI",permalink:"/pt/tutorials/simple-viewer/viewer"}},w={},j=[{value:"Gerenciamento de dados",id:"gerenciamento-de-dados",level:2},{value:"Derivativos",id:"derivativos",level:2},{value:"Pontos de extremidade do servidor",id:"pontos-de-extremidade-do-servidor",level:2},{value:"Experimente",id:"experimente",level:2}],T={toc:j};function N(e){let{components:t,...r}=e;return(0,o.kt)("wrapper",(0,a.Z)({},T,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"dados--derivativos"},"Dados & Derivativos"),(0,o.kt)("p",null,"Nesta etapa, estenderemos nosso servidor para que possamos listar modelos, carreg\xe1-los,\ne prepar\xe1-los para visualiza\xe7\xe3o."),(0,o.kt)("h2",{id:"gerenciamento-de-dados"},"Gerenciamento de dados"),(0,o.kt)("p",null,"Primeiro, vamos garantir que nosso aplicativo tenha um bucket no servi\xe7o de Gerenciamento de Dados\npara armazenar seus arquivos em. Normalmente, o bucket seria criado apenas uma vez como parte de um provisionamento:\nmas em nosso exemplo, implementaremos uma fun\xe7\xe3o auxiliar que garantir\xe1 que o bucket\nest\xe1 dispon\xedvel e use-o em outras partes do aplicativo do servidor."),(0,o.kt)("p",null,"Ao criar buckets, \xe9 necess\xe1rio que os aplicativos definam uma pol\xedtica de reten\xe7\xe3o para objetos armazenados no bucket. Isso n\xe3o pode ser alterado posteriormente. A pol\xedtica de reten\xe7\xe3o no bucket se aplica a todos os objetos armazenados nele. Ao criar um bucket, defina especificamente a ",(0,o.kt)("strong",{parentName:"p"},"policyKey")," como ",(0,o.kt)("strong",{parentName:"p"},"transient"),", ",(0,o.kt)("strong",{parentName:"p"},"temporary"),", ou ",(0,o.kt)("strong",{parentName:"p"},"persistent"),"."),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},(0,o.kt)("strong",{parentName:"p"},"Pol\xedtica de reten\xe7\xe3o de dados")),(0,o.kt)("p",{parentName:"admonition"},(0,o.kt)("strong",{parentName:"p"},"Transit\xf3rio")," - Objetos com mais de 24 horas s\xe3o removidos automaticamente."),(0,o.kt)("p",{parentName:"admonition"},(0,o.kt)("strong",{parentName:"p"},"Tempor\xe1rio")," - Quando um objeto atinge 30 dias de idade, ele \xe9 exclu\xeddo."),(0,o.kt)("p",{parentName:"admonition"},(0,o.kt)("strong",{parentName:"p"},"Persistente")," - Dispon\xedvel at\xe9 que um usu\xe1rio exclua o objeto.")),(0,o.kt)(s.Z,{NodeJsVsCode:i,DotNetVsCode:m,DotNetVs2022:m,mdxType:"EnvTabs"}),(0,o.kt)("admonition",{type:"caution"},(0,o.kt)("p",{parentName:"admonition"},"Observe que o servi\xe7o de Gerenciamento de Dados requer que os nomes de bucket sejam ",(0,o.kt)("strong",{parentName:"p"},"globalmente exclusivos"),",\ne as tentativas de criar um bucket com um nome j\xe1 usado falhar\xe3o com '409 Conflict'.\nConsulte a ",(0,o.kt)("a",{parentName:"p",href:"https://aps.autodesk.com/en/docs/data/v2/reference/http/buckets-POST"},"documenta\xe7\xe3o"),"\npara mais detalhes.")),(0,o.kt)("h2",{id:"derivativos"},"Derivativos"),(0,o.kt)("p",null,"Em seguida, implementaremos algumas fun\xe7\xf5es auxiliares que derivar\xe3o/extrair\xe3o v\xe1rios tipos de informa\xe7\xf5es\ndos arquivos carregados - por exemplo, desenhos 2D, geometria 3D e metadados - que podemos carregar posteriormente\nno Visualizador em nossa p\xe1gina da Web. Para isso, precisaremos iniciar um novo trabalho de convers\xe3o\nna ",(0,o.kt)("a",{parentName:"p",href:"https://aps.autodesk.com/en/docs/model-derivative/v2/developers_guide/overview"},"Derivada do Modelo"),"\ne verifica\xe7\xe3o do status da convers\xe3o."),(0,o.kt)("p",null,"O servi\xe7o Derivativo de Modelo requer que todos os IDs que usamos nas chamadas de API sejam codificados em ",(0,o.kt)("a",{parentName:"p",href:"https://wikipedia.org/wiki/Base64"},"base64"),",\nent\xe3o inclu\xedmos uma pequena fun\xe7\xe3o de utilidade que ajudar\xe1 com isso."),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"Os IDs codificados em Base64 s\xe3o chamados de ",(0,o.kt)("em",{parentName:"p"},"URNs"),".")),(0,o.kt)(s.Z,{NodeJsVsCode:u,DotNetVsCode:b,DotNetVs2022:b,mdxType:"EnvTabs"}),(0,o.kt)("h2",{id:"pontos-de-extremidade-do-servidor"},"Pontos de extremidade do servidor"),(0,o.kt)("p",null,"Agora vamos disponibilizar a nova funcionalidade para o cliente atrav\xe9s de outra\nconjunto de pontos de extremidade."),(0,o.kt)(s.Z,{NodeJsVsCode:d,DotNetVsCode:f,DotNetVs2022:f,mdxType:"EnvTabs"}),(0,o.kt)("h2",{id:"experimente"},"Experimente"),(0,o.kt)("p",null,"Inicie (ou reinicie) o aplicativo como de costume e navegue at\xe9 ",(0,o.kt)("a",{parentName:"p",href:"http://localhost:8080/api/models"},"http://localhost:8080/api/models"),"\nno navegador. O servidor deve responder com uma lista JSON com nomes e URNs de todos os objetos\ndispon\xedvel em seu bucket configurado."),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"Se esta for sua primeira vez trabalhando com APS, voc\xea pode obter uma resposta JSON\ncom uma matriz vazia ('[]') que \xe9 esperada. Na imagem abaixo podemos\nj\xe1 vejo alguns arquivos que foram carregados em nosso bucket no passado.")),(0,o.kt)("admonition",{type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"Se voc\xea estiver usando o Google Chrome, considere instalar o ",(0,o.kt)("a",{parentName:"p",href:"https://chrome.google.com/webstore/detail/json-formatter/bcjindcccaagfpapjjmafapmmgkkhgoa?hl=en"},"JSON Formatter"),"\nou uma extens\xe3o semelhante para formatar automaticamente respostas JSON.")),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"Server Response",src:n(9302).Z,width:"1500",height:"929"})))}N.isMDXComponent=!0},9302:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/data-response-136a1ffb319991f74fc05f2b47c7fb39.webp"}}]);