"use strict";(self.webpackChunkaps_tutorials_website=self.webpackChunkaps_tutorials_website||[]).push([[558],{4137:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},s=Object.keys(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var u=r.createContext({}),l=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=l(e.components);return r.createElement(u.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,s=e.originalType,u=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),p=l(n),m=a,b=p["".concat(u,".").concat(m)]||p[m]||d[m]||s;return n?r.createElement(b,o(o({ref:t},c),{},{components:n})):r.createElement(b,o({ref:t},c))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var s=n.length,o=new Array(s);o[0]=p;var i={};for(var u in t)hasOwnProperty.call(t,u)&&(i[u]=t[u]);i.originalType=e,i.mdxType="string"==typeof e?e:a,o[1]=i;for(var l=2;l<s;l++)o[l]=n[l];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},425:(e,t,n)=>{n.d(t,{Z:()=>o});var r=n(7294),a=n(6010);const s="tabItem_Ymn6";function o(e){let{children:t,hidden:n,className:o}=e;return r.createElement("div",{role:"tabpanel",className:(0,a.Z)(s,o),hidden:n},t)}},3992:(e,t,n)=>{n.d(t,{Z:()=>w});var r=n(7462),a=n(7294),s=n(6010),o=n(2957),i=n(6550),u=n(5238),l=n(3609),c=n(2560);function d(e){return function(e){return a.Children.map(e,(e=>{if((0,a.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))}(e).map((e=>{let{props:{value:t,label:n,attributes:r,default:a}}=e;return{value:t,label:n,attributes:r,default:a}}))}function p(e){const{values:t,children:n}=e;return(0,a.useMemo)((()=>{const e=t??d(n);return function(e){const t=(0,l.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function m(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function b(e){let{queryString:t=!1,groupId:n}=e;const r=(0,i.k6)(),s=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,u._X)(s),(0,a.useCallback)((e=>{if(!s)return;const t=new URLSearchParams(r.location.search);t.set(s,e),r.replace({...r.location,search:t.toString()})}),[s,r])]}function g(e){const{defaultValue:t,queryString:n=!1,groupId:r}=e,s=p(e),[o,i]=(0,a.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!m({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const r=n.find((e=>e.default))??n[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:t,tabValues:s}))),[u,l]=b({queryString:n,groupId:r}),[d,g]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[r,s]=(0,c.Nk)(n);return[r,(0,a.useCallback)((e=>{n&&s.set(e)}),[n,s])]}({groupId:r}),v=(()=>{const e=u??d;return m({value:e,tabValues:s})?e:null})();(0,a.useLayoutEffect)((()=>{v&&i(v)}),[v]);return{selectedValue:o,selectValue:(0,a.useCallback)((e=>{if(!m({value:e,tabValues:s}))throw new Error(`Can't select invalid tab value=${e}`);i(e),l(e),g(e)}),[l,g,s]),tabValues:s}}var v=n(1048);const h="tabList__CuJ",f="tabItem_LNqP";function k(e){let{className:t,block:n,selectedValue:i,selectValue:u,tabValues:l}=e;const c=[],{blockElementScrollPositionUntilNextRender:d}=(0,o.o5)(),p=e=>{const t=e.currentTarget,n=c.indexOf(t),r=l[n].value;r!==i&&(d(t),u(r))},m=e=>{let t=null;switch(e.key){case"Enter":p(e);break;case"ArrowRight":{const n=c.indexOf(e.currentTarget)+1;t=c[n]??c[0];break}case"ArrowLeft":{const n=c.indexOf(e.currentTarget)-1;t=c[n]??c[c.length-1];break}}t?.focus()};return a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.Z)("tabs",{"tabs--block":n},t)},l.map((e=>{let{value:t,label:n,attributes:o}=e;return a.createElement("li",(0,r.Z)({role:"tab",tabIndex:i===t?0:-1,"aria-selected":i===t,key:t,ref:e=>c.push(e),onKeyDown:m,onClick:p},o,{className:(0,s.Z)("tabs__item",f,o?.className,{"tabs__item--active":i===t})}),n??t)})))}function y(e){let{lazy:t,children:n,selectedValue:r}=e;if(n=Array.isArray(n)?n:[n],t){const e=n.find((e=>e.props.value===r));return e?(0,a.cloneElement)(e,{className:"margin-top--md"}):null}return a.createElement("div",{className:"margin-top--md"},n.map(((e,t)=>(0,a.cloneElement)(e,{key:t,hidden:e.props.value!==r}))))}function j(e){const t=g(e);return a.createElement("div",{className:(0,s.Z)("tabs-container",h)},a.createElement(k,(0,r.Z)({},e,t)),a.createElement(y,(0,r.Z)({},e,t)))}function w(e){const t=(0,v.Z)();return a.createElement(j,(0,r.Z)({key:String(t)},e))}},415:(e,t,n)=>{n.d(t,{Z:()=>o});var r=n(7294),a=n(3992),s=n(425);function o(e){let{NodeJsVsCode:t,DotNetVsCode:n,DotNetVs2022:o}=e;return r.createElement(a.Z,{groupId:"development-environment"},r.createElement(s.Z,{value:"nodejs-vscode",label:"Node.js & VSCode",default:!0},r.createElement(t,null)),r.createElement(s.Z,{value:"dotnet-vscode",label:".NET 6 & VSCode"},r.createElement(n,null)),r.createElement(s.Z,{value:"dotnet-vs2022",label:".NET 6 & VS2022"},r.createElement(o,null)))}},9373:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>h,contentTitle:()=>g,default:()=>y,frontMatter:()=>b,metadata:()=>v,toc:()=>f});var r=n(7462),a=(n(7294),n(4137)),s=n(415);const o={toc:[]};function i(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},o,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Vamos implementar a l\xf3gica para navegar pelos hubs individuais, projetos, pastas, itens,\ne vers\xf5es. Adicione o seguinte c\xf3digo ao final do arquivo 'services/aps.js':"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="services/aps.js"',title:'"services/aps.js"'},"service.getHubs = async (accessToken) => {\n    const resp = await dataManagementClient.getHubs(accessToken);\n    return resp.data;\n};\nservice.getProjects = async (hubId, accessToken) => {\n    const resp = await dataManagementClient.getHubProjects(accessToken, hubId);\n    return resp.data;\n};\nservice.getProjectContents = async (hubId, projectId, folderId, accessToken) => {\n    if (!folderId) {\n        const resp = await dataManagementClient.getProjectTopFolders(accessToken, hubId, projectId);\n        return resp.data;\n    } else {\n        const resp = await dataManagementClient.getFolderContents(accessToken, projectId, folderId);\n        return resp.data;\n    }\n};\nservice.getItemVersions = async (projectId, itemId, accessToken) => {\n    const resp = await dataManagementClient.getItemVersions(accessToken, projectId, itemId);\n    return resp.data;\n};\n")))}i.isMDXComponent=!0;const u={toc:[]};function l(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Crie um arquivo 'hubs.js' na subpasta 'rotas' com o seguinte conte\xfado:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="routes/hubs.js"',title:'"routes/hubs.js"'},"const express = require('express');\nconst { authRefreshMiddleware, getHubs, getProjects, getProjectContents, getItemVersions } = require('../services/aps.js');\nlet router = express.Router();\nrouter.use('/api/hubs', authRefreshMiddleware);\nrouter.get('/api/hubs', async function (req, res, next) {\n    try {\n        const hubs = await getHubs(req.internalOAuthToken.access_token);\n        res.json(hubs);\n    } catch (err) {\n        next(err);\n    }\n});\nrouter.get('/api/hubs/:hub_id/projects', async function (req, res, next) {\n    try {\n        const projects = await getProjects(req.params.hub_id, req.internalOAuthToken.access_token);\n        res.json(projects);\n    } catch (err) {\n        next(err);\n    }\n});\nrouter.get('/api/hubs/:hub_id/projects/:project_id/contents', async function (req, res, next) {\n    try {\n        const contents = await getProjectContents(req.params.hub_id, req.params.project_id, req.query.folder_id, req.internalOAuthToken.access_token);\n        res.json(contents);\n    } catch (err) {\n        next(err);\n    }\n});\nrouter.get('/api/hubs/:hub_id/projects/:project_id/contents/:item_id/versions', async function (req, res, next) {\n    try {\n        const versions = await getItemVersions(req.params.project_id, req.params.item_id, req.internalOAuthToken.access_token);\n        res.json(versions);\n    } catch (err) {\n        next(err);\n    }\n});\nmodule.exports = router;\n")),(0,a.kt)("p",null,"E monte o roteador em nosso aplicativo de servidor modificando 'server.js':"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="server.js"',title:'"server.js"'},"const express = require('express');\nconst session = require('cookie-session');\nconst { PORT, SERVER_SESSION_SECRET } = require('./config.js');\nlet app = express();\napp.use(express.static('wwwroot'));\napp.use(session({ secret: SERVER_SESSION_SECRET, maxAge: 24 * 60 * 60 * 1000 }));\napp.use(require('./routes/auth.js'));\n// highlight-start\napp.use(require('./routes/hubs.js'));\n// highlight-end\napp.listen(PORT, () => console.log(`Server listening on port ${PORT}...`));\n")))}l.isMDXComponent=!0;const c={toc:[]};function d(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Crie um 'APS. Hubs.cs' na subpasta 'Modelos' com o seguinte conte\xfado:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Models/APS.Hubs.cs"',title:'"Models/APS.Hubs.cs"'},"using System.Collections.Generic;\nusing System.Threading.Tasks;\nusing Autodesk.DataManagement;\nusing Autodesk.DataManagement.Http;\nusing Autodesk.DataManagement.Model;\npublic partial class APS\n{\n    public async Task<IEnumerable<HubsData>> GetHubs(Tokens tokens)\n    {\n        var dataManagementClient = new DataManagementClient(_sdkManager);\n        var hubs = await dataManagementClient.GetHubsAsync(accessToken: tokens.InternalToken);\n        return hubs.Data;\n    }\n    public async Task<IEnumerable<ProjectsData>> GetProjects(string hubId, Tokens tokens)\n    {\n        var dataManagementClient = new DataManagementClient(_sdkManager);\n        var projects = await dataManagementClient.GetHubProjectsAsync(hubId, accessToken: tokens.InternalToken);\n        return projects.Data;\n    }\n    public async Task<IEnumerable<TopFoldersData>> GetTopFolders(string hubId, string projectId, Tokens tokens)\n    {\n        var dataManagementClient = new DataManagementClient(_sdkManager);\n        var folders = await dataManagementClient.GetProjectTopFoldersAsync(hubId, projectId, accessToken: tokens.InternalToken);\n        return folders.Data;\n    }\n    public async Task<IEnumerable<FolderContentsData>> GetFolderContents(string projectId, string folderId, Tokens tokens)\n    {\n        var dataManagementClient = new DataManagementClient(_sdkManager);\n        var contents = await dataManagementClient.GetFolderContentsAsync(projectId, folderId, accessToken: tokens.InternalToken);\n        return contents.Data;\n    }\n    public async Task<IEnumerable<VersionsData>> GetVersions(string projectId, string itemId, Tokens tokens)\n    {\n        var dataManagementClient = new DataManagementClient(_sdkManager);\n        var versions = await dataManagementClient.GetItemVersionsAsync(projectId, itemId, accessToken: tokens.InternalToken);\n        return versions.Data;\n    }\n}\n")))}d.isMDXComponent=!0;const p={toc:[]};function m(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Crie um arquivo 'HubsController.cs' na subpasta 'Controladores' com o seguinte conte\xfado:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Controllers/HubsController.cs"',title:'"Controllers/HubsController.cs"'},'using System.Threading.Tasks;\nusing Microsoft.AspNetCore.Mvc;\nusing Microsoft.Extensions.Logging;\nusing Newtonsoft.Json;\n[ApiController]\n[Route("api/[controller]")]\npublic class HubsController : ControllerBase\n{\n    private readonly ILogger<HubsController> _logger;\n    private readonly APS _aps;\n    public HubsController(ILogger<HubsController> logger, APS aps)\n    {\n        _logger = logger;\n        _aps = aps;\n    }\n    [HttpGet()]\n    public async Task<ActionResult<string>> ListHubs()\n    {\n        var tokens = await AuthController.PrepareTokens(Request, Response, _aps);\n        if (tokens == null)\n        {\n            return Unauthorized();\n        }\n        var hubs = await _aps.GetHubs(tokens);\n        return JsonConvert.SerializeObject(hubs);\n    }\n    [HttpGet("{hub}/projects")]\n    public async Task<ActionResult<string>> ListProjects(string hub)\n    {\n        var tokens = await AuthController.PrepareTokens(Request, Response, _aps);\n        if (tokens == null)\n        {\n            return Unauthorized();\n        }\n        var projects = await _aps.GetProjects(hub, tokens);\n        return JsonConvert.SerializeObject(projects);\n    }\n    [HttpGet("{hub}/projects/{project}/contents")]\n    public async Task<ActionResult<string>> ListItems(string hub, string project, [FromQuery] string? folder_id)\n    {\n        var tokens = await AuthController.PrepareTokens(Request, Response, _aps);\n        if (tokens == null)\n        {\n            return Unauthorized();\n        }\n        if (string.IsNullOrEmpty(folder_id))\n        {\n            var folders = await _aps.GetTopFolders(hub, project, tokens);\n            return JsonConvert.SerializeObject(folders);\n        }\n        else\n        {\n            var contents = await _aps.GetFolderContents(project, folder_id, tokens);\n            return JsonConvert.SerializeObject(contents);\n        }\n    }\n    [HttpGet("{hub}/projects/{project}/contents/{item}/versions")]\n    public async Task<ActionResult<string>> ListVersions(string hub, string project, string item)\n    {\n        var tokens = await AuthController.PrepareTokens(Request, Response, _aps);\n        if (tokens == null)\n        {\n            return Unauthorized();\n        }\n        var versions = await _aps.GetVersions(project, item, tokens);\n        return JsonConvert.SerializeObject(versions);\n    }\n}\n')),(0,a.kt)("p",null,"O controlador manipula v\xe1rios pontos de extremidade para navegar pelo conte\xfado em outros baseados em APS\naplica\xe7\xf5es como BIM 360 Docs e ACC. Faremos uso desses endpoints quando\ncriando a parte da interface do usu\xe1rio do aplicativo."))}m.isMDXComponent=!0;const b={},g="Navega\xe7\xe3o de Dados",v={unversionedId:"tutorials/hubs-browser/data",id:"tutorials/hubs-browser/data",title:"Navega\xe7\xe3o de Dados",description:"Nesta etapa, estenderemos nosso servidor para que possamos navegar pelo conte\xfado de outros baseados em APS",source:"@site/i18n/pt/docusaurus-plugin-content-docs/current/03-tutorials/02-hubs-browser/03-data.mdx",sourceDirName:"03-tutorials/02-hubs-browser",slug:"/tutorials/hubs-browser/data",permalink:"/pt/tutorials/hubs-browser/data",draft:!1,editUrl:"https://github.com/autodesk-platform-services/aps-tutorials-website/edit/master/docs/03-tutorials/02-hubs-browser/03-data.mdx",tags:[],version:"current",sidebarPosition:3,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Autentica\xe7\xe3o",permalink:"/pt/tutorials/hubs-browser/auth"},next:{title:"Visualizador & UI",permalink:"/pt/tutorials/hubs-browser/viewer"}},h={},f=[{value:"Hubs de navega\xe7\xe3o",id:"hubs-de-navega\xe7\xe3o",level:2},{value:"Pontos de extremidade do servidor",id:"pontos-de-extremidade-do-servidor",level:2},{value:"Experimente",id:"experimente",level:2}],k={toc:f};function y(e){let{components:t,...o}=e;return(0,a.kt)("wrapper",(0,r.Z)({},k,o,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"navega\xe7\xe3o-de-dados"},"Navega\xe7\xe3o de Dados"),(0,a.kt)("p",null,"Nesta etapa, estenderemos nosso servidor para que possamos navegar pelo conte\xfado de outros baseados em APS\naplicativos como BIM 360 Docs ou Autodesk Docs. Vamos acompanhar basicamente o Gerenciamento de Dados\nHierarquia do servi\xe7o de hubs, projetos, pastas, itens e vers\xf5es:"),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"Data Management structure",src:n(5065).Z,width:"1399",height:"864"})),(0,a.kt)("h2",{id:"hubs-de-navega\xe7\xe3o"},"Hubs de navega\xe7\xe3o"),(0,a.kt)("p",null,"Primeiro, vamos adicionar alguns m\xe9todos auxiliares para navegar pelos hubs, projetos,\npastas, itens e vers\xf5es:"),(0,a.kt)(s.Z,{NodeJsVsCode:i,DotNetVsCode:d,DotNetVs2022:d,mdxType:"EnvTabs"}),(0,a.kt)("h2",{id:"pontos-de-extremidade-do-servidor"},"Pontos de extremidade do servidor"),(0,a.kt)("p",null,"Em seguida, vamos expor a nova funcionalidade ao c\xf3digo do lado do cliente por meio de outro\nconjunto de pontos de extremidade."),(0,a.kt)(s.Z,{NodeJsVsCode:l,DotNetVsCode:m,DotNetVs2022:m,mdxType:"EnvTabs"}),(0,a.kt)("h2",{id:"experimente"},"Experimente"),(0,a.kt)("p",null,"E \xe9 isso para o lado do servidor. Hora de experimentar!"),(0,a.kt)("p",null,"Inicie (ou reinicie) o aplicativo do Visual Studio Code como de costume e navegue at\xe9\n","[http://localhost:8080/api/hubs]"," (http://localhost:8080/api/hubs) no navegador.\nO servidor deve responder com uma lista JSON de todos os hubs aos quais voc\xea tem acesso.\nTente copiar o ID de um dos hubs e us\xe1-lo em outro endere\xe7o: http://localhost:8080/api/hubs/your-hub-id/projects.\nNesse caso, o aplicativo de servidor deve responder com uma lista JSON de todos os projetos\ndispon\xedvel no hub especificado."),(0,a.kt)("admonition",{type:"info"},(0,a.kt)("p",{parentName:"admonition"},"Se voc\xea ignorou o procedimento de login na etapa anterior ou reiniciou o aplicativo do servidor,\ntalvez seja necess\xe1rio ir para ",(0,a.kt)("a",{parentName:"p",href:"http://localhost:8080/api/auth/login"},"http://localhost:8080/api/auth/login"),"\nnovamente para se certificar de que todos os dados de autentica\xe7\xe3o est\xe3o dispon\xedveis em cookies antes de testar\no ponto de extremidade '/api/hubs'.")),(0,a.kt)("admonition",{type:"tip"},(0,a.kt)("p",{parentName:"admonition"},"Se voc\xea estiver usando o Google Chrome, considere instalar o ",(0,a.kt)("a",{parentName:"p",href:"https://chrome.google.com/webstore/detail/json-formatter/bcjindcccaagfpapjjmafapmmgkkhgoa?hl=en"},"JSON Formatter"),"\nou uma extens\xe3o semelhante para formatar automaticamente respostas JSON.")),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"Hubs Response",src:n(8143).Z,width:"1500",height:"929"})))}y.isMDXComponent=!0},5065:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/dm-structure-b5f87fcf63e09968a2997e1df1c9d095.webp"},8143:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/hubs-response-6ca89cc77b1e67f6197c74b8561d0115.webp"}}]);