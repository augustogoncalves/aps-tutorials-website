"use strict";(self.webpackChunkaps_tutorials_website=self.webpackChunkaps_tutorials_website||[]).push([[481],{4137:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var o=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,o,a=function(e,t){if(null==e)return{};var n,o,a={},r=Object.keys(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=o.createContext({}),l=function(e){var t=o.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},u=function(e){var t=l(e.components);return o.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},d=o.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,c=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),d=l(n),m=a,v=d["".concat(c,".").concat(m)]||d[m]||p[m]||r;return n?o.createElement(v,s(s({ref:t},u),{},{components:n})):o.createElement(v,s({ref:t},u))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,s=new Array(r);s[0]=d;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:a,s[1]=i;for(var l=2;l<r;l++)s[l]=n[l];return o.createElement.apply(null,s)}return o.createElement.apply(null,n)}d.displayName="MDXCreateElement"},425:(e,t,n)=>{n.d(t,{Z:()=>s});var o=n(7294),a=n(6010);const r="tabItem_Ymn6";function s(e){let{children:t,hidden:n,className:s}=e;return o.createElement("div",{role:"tabpanel",className:(0,a.Z)(r,s),hidden:n},t)}},3992:(e,t,n)=>{n.d(t,{Z:()=>C});var o=n(7462),a=n(7294),r=n(6010),s=n(2957),i=n(6550),c=n(5238),l=n(3609),u=n(2560);function p(e){return function(e){return a.Children.map(e,(e=>{if((0,a.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))}(e).map((e=>{let{props:{value:t,label:n,attributes:o,default:a}}=e;return{value:t,label:n,attributes:o,default:a}}))}function d(e){const{values:t,children:n}=e;return(0,a.useMemo)((()=>{const e=t??p(n);return function(e){const t=(0,l.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function m(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function v(e){let{queryString:t=!1,groupId:n}=e;const o=(0,i.k6)(),r=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,c._X)(r),(0,a.useCallback)((e=>{if(!r)return;const t=new URLSearchParams(o.location.search);t.set(r,e),o.replace({...o.location,search:t.toString()})}),[r,o])]}function g(e){const{defaultValue:t,queryString:n=!1,groupId:o}=e,r=d(e),[s,i]=(0,a.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!m({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const o=n.find((e=>e.default))??n[0];if(!o)throw new Error("Unexpected error: 0 tabValues");return o.value}({defaultValue:t,tabValues:r}))),[c,l]=v({queryString:n,groupId:o}),[p,g]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[o,r]=(0,u.Nk)(n);return[o,(0,a.useCallback)((e=>{n&&r.set(e)}),[n,r])]}({groupId:o}),k=(()=>{const e=c??p;return m({value:e,tabValues:r})?e:null})();(0,a.useLayoutEffect)((()=>{k&&i(k)}),[k]);return{selectedValue:s,selectValue:(0,a.useCallback)((e=>{if(!m({value:e,tabValues:r}))throw new Error(`Can't select invalid tab value=${e}`);i(e),l(e),g(e)}),[l,g,r]),tabValues:r}}var k=n(1048);const h="tabList__CuJ",f="tabItem_LNqP";function b(e){let{className:t,block:n,selectedValue:i,selectValue:c,tabValues:l}=e;const u=[],{blockElementScrollPositionUntilNextRender:p}=(0,s.o5)(),d=e=>{const t=e.currentTarget,n=u.indexOf(t),o=l[n].value;o!==i&&(p(t),c(o))},m=e=>{let t=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const n=u.indexOf(e.currentTarget)+1;t=u[n]??u[0];break}case"ArrowLeft":{const n=u.indexOf(e.currentTarget)-1;t=u[n]??u[u.length-1];break}}t?.focus()};return a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.Z)("tabs",{"tabs--block":n},t)},l.map((e=>{let{value:t,label:n,attributes:s}=e;return a.createElement("li",(0,o.Z)({role:"tab",tabIndex:i===t?0:-1,"aria-selected":i===t,key:t,ref:e=>u.push(e),onKeyDown:m,onClick:d},s,{className:(0,r.Z)("tabs__item",f,s?.className,{"tabs__item--active":i===t})}),n??t)})))}function S(e){let{lazy:t,children:n,selectedValue:o}=e;if(n=Array.isArray(n)?n:[n],t){const e=n.find((e=>e.props.value===o));return e?(0,a.cloneElement)(e,{className:"margin-top--md"}):null}return a.createElement("div",{className:"margin-top--md"},n.map(((e,t)=>(0,a.cloneElement)(e,{key:t,hidden:e.props.value!==o}))))}function T(e){const t=g(e);return a.createElement("div",{className:(0,r.Z)("tabs-container",h)},a.createElement(b,(0,o.Z)({},e,t)),a.createElement(S,(0,o.Z)({},e,t)))}function C(e){const t=(0,k.Z)();return a.createElement(T,(0,o.Z)({key:String(t)},e))}},415:(e,t,n)=>{n.d(t,{Z:()=>s});var o=n(7294),a=n(3992),r=n(425);function s(e){let{NodeJsVsCode:t,DotNetVsCode:n,DotNetVs2022:s}=e;return o.createElement(a.Z,{groupId:"development-environment"},o.createElement(r.Z,{value:"nodejs-vscode",label:"Node.js & VSCode",default:!0},o.createElement(t,null)),o.createElement(r.Z,{value:"dotnet-vscode",label:".NET 6 & VSCode"},o.createElement(n,null)),o.createElement(r.Z,{value:"dotnet-vs2022",label:".NET 6 & VS2022"},o.createElement(s,null)))}},9723:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>y,contentTitle:()=>T,default:()=>N,frontMatter:()=>S,metadata:()=>C,toc:()=>w});var o=n(7462),a=(n(7294),n(4137)),r=n(415);const s={toc:[]};function i(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,o.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Crie um arquivo 'aps.js' na pasta 'services'. \xc9 aqui que vamos implementar\ntoda a l\xf3gica APS que ser\xe1 utilizada em diferentes \xe1reas da nossa aplica\xe7\xe3o de servidor. Vamos come\xe7ar\nadicionando o seguinte c\xf3digo ao arquivo:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="services/aps.js"',title:'"services/aps.js"'},"const { SdkManagerBuilder } = require('@aps_sdk/autodesk-sdkmanager');\nconst { AuthenticationClient, Scopes } = require('@aps_sdk/authentication');\nconst { OssClient, CreateBucketsPayloadPolicyKeyEnum, CreateBucketXAdsRegionEnum } = require('@aps_sdk/oss');\nconst { ModelDerivativeClient, View, Type } = require('@aps_sdk/model-derivative');\nconst { APS_CLIENT_ID, APS_CLIENT_SECRET, APS_BUCKET } = require('../config.js');\nconst sdk = SdkManagerBuilder.create().build();\nconst authenticationClient = new AuthenticationClient(sdk);\nconst ossClient = new OssClient(sdk);\nconst modelDerivativeClient = new ModelDerivativeClient(sdk);\nconst service = module.exports = {};\nservice.getInternalToken = async () => {\n    const credentials = await authenticationClient.getTwoLeggedToken(APS_CLIENT_ID, APS_CLIENT_SECRET, [\n        Scopes.DataRead,\n        Scopes.DataCreate,\n        Scopes.DataWrite,\n        Scopes.BucketCreate,\n        Scopes.BucketRead\n    ]);\n    return credentials;\n};\nservice.getPublicToken = async () => {\n    const credentials = await authenticationClient.getTwoLeggedToken(APS_CLIENT_ID, APS_CLIENT_SECRET, [\n        Scopes.DataRead\n    ]);\n    return credentials;\n};\n")),(0,a.kt)("p",null,"O c\xf3digo fornece duas fun\xe7\xf5es auxiliares - uma para gerar tokens de acesso para uso interno\n(dando-nos acesso de leitura/grava\xe7\xe3o aos buckets e objetos de Gerenciamento de Dados) e um para gerar\ntokens para uso p\xfablico (dando apenas um acesso de leitura \xe0s sa\xeddas de tradu\xe7\xe3o da Derivada de Modelo\nservi\xe7o)."))}i.isMDXComponent=!0;const c={toc:[]};function l(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,o.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Crie um arquivo 'auth.js' na subpasta 'rotas' com o seguinte conte\xfado:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="routes/auth.js"',title:'"routes/auth.js"'},"const express = require('express');\nconst { getPublicToken } = require('../services/aps.js');\nlet router = express.Router();\nrouter.get('/api/auth/token', async function (req, res, next) {\n    try {\n        res.json(await getPublicToken());\n    } catch (err) {\n        next(err);\n    }\n});\nmodule.exports = router;\n")),(0,a.kt)("p",null,"Aqui implementamos um novo ",(0,a.kt)("a",{parentName:"p",href:"http://expressjs.com/en/4x/api.html#router"},"Express Router")," que ir\xe1 lidar com\nsolicita\xe7\xf5es chegando ao nosso servidor, com a URL terminando com '/token', gerando um token de acesso p\xfablico\ne envi\xe1-lo de volta ao cliente como uma resposta JSON."),(0,a.kt)("p",null,"Vamos \"montar\" o roteador em nosso aplicativo de servidor modificando o 'server.js':"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="server.js"',title:'"server.js"'},"const express = require('express');\nconst { PORT } = require('./config.js');\nlet app = express();\napp.use(express.static('wwwroot'));\n// highlight-start\napp.use(require('./routes/auth.js'));\n// highlight-end\napp.listen(PORT, function () { console.log(`Server listening on port ${PORT}...`); });\n")))}l.isMDXComponent=!0;const u={toc:[]};function p(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,o.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Se o aplicativo ainda estiver em execu\xe7\xe3o, reinicie-o (por exemplo, usando ",(0,a.kt)("em",{parentName:"p"},"Run > Debugging")," Restart ,\nou clicando no \xedcone verde de reinicializa\xe7\xe3o), caso contr\xe1rio, inicie-o novamente (usando ",(0,a.kt)("em",{parentName:"p"},"Run > Debugging")," Iniciar,\nou pressionando 'F5'). Quando voc\xea navega at\xe9 ",(0,a.kt)("a",{parentName:"p",href:"http://localhost:8080/api/auth/token"},"http://localhost:8080/api/auth/token"),"\nno navegador, o servidor agora deve responder com um objeto JSON contendo os dados do token de acesso."))}p.isMDXComponent=!0;const d={toc:[]};function m(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,o.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Crie um arquivo 'APS.cs' na subpasta 'Modelos'. \xc9 a\xed que vamos implementar\ntoda a l\xf3gica espec\xedfica do APS que ser\xe1 usada em diferentes \xe1reas da nossa aplica\xe7\xe3o de servidor. Vamos\nComece adicionando o seguinte c\xf3digo ao arquivo:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Models/APS.cs"',title:'"Models/APS.cs"'},'using Autodesk.SDKManager;\npublic partial class APS\n{\n    private readonly SDKManager _sdkManager;\n    private readonly string _clientId;\n    private readonly string _clientSecret;\n    private readonly string _bucket;\n    public APS(string clientId, string clientSecret, string bucket = null)\n    {\n        _sdkManager = SdkManagerBuilder.Create().Build();\n        _clientId = clientId;\n        _clientSecret = clientSecret;\n        _bucket = string.IsNullOrEmpty(bucket) ? string.Format("{0}-basic-app", _clientId.ToLower()) : bucket;\n    }\n}\n')),(0,a.kt)("p",null,"Observe que a classe 'APS' \xe9 declarada como 'parcial'. Vamos prorrog\xe1-lo\nem outros arquivos '*.cs' mais tarde. Um singleton 'APS' ser\xe1 ent\xe3o fornecido ao nosso servidor\natrav\xe9s do ASP. NET's ",(0,a.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/aspnet/core/fundamentals/dependency-injection?view=aspnetcore-6.0"},"inje\xe7\xe3o de depend\xeancia"),"."),(0,a.kt)("p",null,"Em seguida, crie outro arquivo na mesma subpasta 'Modelos' e chame-o de 'APS. Auth.cs'.\nAqui vamos implementar toda a l\xf3gica de autentica\xe7\xe3o. Preencha o arquivo com o seguinte c\xf3digo:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Models/APS.Auth.cs"',title:'"Models/APS.Auth.cs"'},"using System;\nusing System.Collections.Generic;\nusing System.Threading.Tasks;\nusing Autodesk.Authentication;\nusing Autodesk.Authentication.Model;\npublic record Token(string AccessToken, DateTime ExpiresAt);\npublic partial class APS\n{\n    private Token _internalTokenCache;\n    private Token _publicTokenCache;\n    private async Task<Token> GetToken(List<Scopes> scopes)\n    {\n        var authenticationClient = new AuthenticationClient(_sdkManager);\n        var auth = await authenticationClient.GetTwoLeggedTokenAsync(_clientId, _clientSecret, scopes);\n        return new Token(auth.AccessToken, DateTime.UtcNow.AddSeconds((double)auth.ExpiresIn));\n    }\n    public async Task<Token> GetPublicToken()\n    {\n        if (_publicTokenCache == null || _publicTokenCache.ExpiresAt < DateTime.UtcNow)\n            _publicTokenCache = await GetToken(new List<Scopes> { Scopes.ViewablesRead });\n        return _publicTokenCache;\n    }\n    private async Task<Token> GetInternalToken()\n    {\n        if (_internalTokenCache == null || _internalTokenCache.ExpiresAt < DateTime.UtcNow)\n            _internalTokenCache = await GetToken(new List<Scopes> { Scopes.BucketCreate, Scopes.BucketRead, Scopes.DataRead, Scopes.DataWrite, Scopes.DataCreate });\n        return _internalTokenCache;\n    }\n}\n")),(0,a.kt)("p",null,"Esta parte da classe 'APS' fornece dois m\xe9todos auxiliares - um para uso interno\n(dando-nos acesso de leitura/grava\xe7\xe3o aos buckets e objetos de Gerenciamento de Dados) e um para uso p\xfablico\n(permitindo apenas o acesso \xe0s sa\xeddas de tradu\xe7\xe3o do servi\xe7o Model Derivative)."),(0,a.kt)("p",null,"Em seguida, vamos atualizar nosso arquivo 'Startup.cs' para fazer uma inst\xe2ncia singleton da classe 'APS'\nDispon\xedvel para o nosso aplicativo de servidor:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Startup.cs"',title:'"Startup.cs"'},'using System;\nusing Microsoft.AspNetCore.Builder;\nusing Microsoft.AspNetCore.Hosting;\nusing Microsoft.Extensions.Configuration;\nusing Microsoft.Extensions.DependencyInjection;\nusing Microsoft.Extensions.Hosting;\npublic class Startup\n{\n    public Startup(IConfiguration configuration)\n    {\n        Configuration = configuration;\n    }\n    public IConfiguration Configuration { get; }\n    // This method gets called by the runtime. Use this method to add services to the container.\n    public void ConfigureServices(IServiceCollection services)\n    {\n        services.AddControllers();\n        var clientID = Configuration["APS_CLIENT_ID"];\n        var clientSecret = Configuration["APS_CLIENT_SECRET"];\n        var bucket = Configuration["APS_BUCKET"]; // Optional\n        if (string.IsNullOrEmpty(clientID) || string.IsNullOrEmpty(clientSecret))\n        {\n            throw new ApplicationException("Missing required environment variables APS_CLIENT_ID or APS_CLIENT_SECRET.");\n        }\n        // highlight-start\n        services.AddSingleton<APS>(new APS(clientID, clientSecret, bucket));\n        // highlight-end\n    }\n    // This method gets called by the runtime. Use this method to configure the HTTP request pipeline.\n    public void Configure(IApplicationBuilder app, IWebHostEnvironment env)\n    {\n        if (env.IsDevelopment())\n        {\n            app.UseDeveloperExceptionPage();\n        }\n        app.UseDefaultFiles();\n        app.UseStaticFiles();\n        app.UseRouting();\n        app.UseEndpoints(endpoints =>\n        {\n            endpoints.MapControllers();\n        });\n    }\n}\n')))}m.isMDXComponent=!0;const v={toc:[]};function g(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,o.Z)({},v,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Crie um arquivo 'AuthController.cs' na subpasta 'Controladores' com o seguinte conte\xfado:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Controllers/AuthController.cs"',title:'"Controllers/AuthController.cs"'},'using System;\nusing System.Threading.Tasks;\nusing Microsoft.AspNetCore.Mvc;\n[ApiController]\n[Route("api/[controller]")]\npublic class AuthController : ControllerBase\n{\n    public record AccessToken(string access_token, long expires_in);\n    private readonly APS _aps;\n    public AuthController(APS aps)\n    {\n        _aps = aps;\n    }\n    [HttpGet("token")]\n    public async Task<AccessToken> GetAccessToken()\n    {\n        var token = await _aps.GetPublicToken();\n        return new AccessToken(\n            token.AccessToken,\n            (long)Math.Round((token.ExpiresAt - DateTime.UtcNow).TotalSeconds)\n        );\n    }\n}\n')),(0,a.kt)("p",null,"O controlador receber\xe1 a inst\xe2ncia de 'APS' - nosso cliente Autodesk Platform Services - por meio do ASP. REDES\n","[Inje\xe7\xe3o de depend\xeancia]"," (",(0,a.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/aspnet/core/fundamentals/dependency-injection?view=aspnetcore-6.0"},"https://docs.microsoft.com/en-us/aspnet/core/fundamentals/dependency-injection?view=aspnetcore-6.0"),"),\ne ele lidar\xe1 com solicita\xe7\xf5es para '/api/auth/token' gerando um novo token de acesso\ne envi\xe1-lo de volta ao cliente como uma carga JSON \xfatil."))}g.isMDXComponent=!0;const k={toc:[]};function h(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,o.Z)({},k,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Se o aplicativo ainda estiver em execu\xe7\xe3o, reinicie-o (por exemplo, usando ",(0,a.kt)("em",{parentName:"p"},"Run > Debugging")," Restart ,\nou clicando no \xedcone verde de reinicializa\xe7\xe3o), caso contr\xe1rio, inicie-o novamente (usando ",(0,a.kt)("em",{parentName:"p"},"Run > Debugging")," Iniciar,\nou pressionando 'F5'). Quando voc\xea navega at\xe9 ",(0,a.kt)("a",{parentName:"p",href:"http://localhost:8080/api/auth/token"},"http://localhost:8080/api/auth/token"),"\nno navegador, o servidor agora deve responder com um objeto JSON contendo os dados do token de acesso."))}h.isMDXComponent=!0;const f={toc:[]};function b(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,o.Z)({},f,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Se o aplicativo ainda estiver em execu\xe7\xe3o, reinicie-o (por exemplo, usando ",(0,a.kt)("em",{parentName:"p"},"Debug > Restart"),",\nou pressionando 'Ctrl'+'Shift'+'F5'), caso contr\xe1rio, inicie-o novamente (usando ",(0,a.kt)("em",{parentName:"p"},"Debug > Debugging")," Iniciar,\nou pressionando 'F5'). Quando voc\xea navega at\xe9 ",(0,a.kt)("a",{parentName:"p",href:"http://localhost:8080/api/auth/token"},"http://localhost:8080/api/auth/token"),"\nno navegador, o servidor agora deve responder com um objeto JSON contendo os dados do token de acesso."))}b.isMDXComponent=!0;const S={},T="Autentica\xe7\xe3o",C={unversionedId:"tutorials/simple-viewer/auth",id:"tutorials/simple-viewer/auth",title:"Autentica\xe7\xe3o",description:"Nesta etapa, vamos estender a implementa\xe7\xe3o do servidor para que ele possa se autenticar",source:"@site/i18n/pt/docusaurus-plugin-content-docs/current/03-tutorials/01-simple-viewer/02-auth.mdx",sourceDirName:"03-tutorials/01-simple-viewer",slug:"/tutorials/simple-viewer/auth",permalink:"/pt/tutorials/simple-viewer/auth",draft:!1,editUrl:"https://github.com/autodesk-platform-services/aps-tutorials-website/edit/master/docs/03-tutorials/01-simple-viewer/02-auth.mdx",tags:[],version:"current",sidebarPosition:2,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Configura\xe7\xe3o do aplicativo",permalink:"/pt/tutorials/simple-viewer/setup"},next:{title:"Dados & Derivativos",permalink:"/pt/tutorials/simple-viewer/data"}},y={},w=[{value:"Tokens de acesso",id:"tokens-de-acesso",level:2},{value:"Pontos de extremidade do servidor",id:"pontos-de-extremidade-do-servidor",level:2},{value:"Experimente",id:"experimente",level:2}],E={toc:w};function N(e){let{components:t,...s}=e;return(0,a.kt)("wrapper",(0,o.Z)({},E,s,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"autentica\xe7\xe3o"},"Autentica\xe7\xe3o"),(0,a.kt)("p",null,"Nesta etapa, vamos estender a implementa\xe7\xe3o do servidor para que ele possa se autenticar\npara a plataforma APS e gerar tokens de acesso para diferentes casos de uso."),(0,a.kt)("admonition",{type:"tip"},(0,a.kt)("p",{parentName:"admonition"},'\xc9 uma boa pr\xe1tica gerar um token "interno" com mais recursos (por exemplo,\npermitindo que voc\xea crie ou exclua arquivos no servi\xe7o de Gerenciamento de Dados) que s\xf3 ser\xe3o usados\npelo servidor e um token "p\xfablico" com menos recursos que podem ser compartilhados com seguran\xe7a\na l\xf3gica do lado do cliente.')),(0,a.kt)("h2",{id:"tokens-de-acesso"},"Tokens de acesso"),(0,a.kt)(r.Z,{NodeJsVsCode:i,DotNetVsCode:m,DotNetVs2022:m,mdxType:"EnvTabs"}),(0,a.kt)("h2",{id:"pontos-de-extremidade-do-servidor"},"Pontos de extremidade do servidor"),(0,a.kt)("p",null,"Agora podemos expor essa funcionalidade atrav\xe9s do primeiro endpoint do nosso servidor."),(0,a.kt)(r.Z,{NodeJsVsCode:l,DotNetVsCode:g,DotNetVs2022:g,mdxType:"EnvTabs"}),(0,a.kt)("h2",{id:"experimente"},"Experimente"),(0,a.kt)("p",null,"Vamos ver se nosso novo endpoint de servidor funciona."),(0,a.kt)(r.Z,{NodeJsVsCode:p,DotNetVsCode:h,DotNetVs2022:b,mdxType:"EnvTabs"}),(0,a.kt)("admonition",{type:"tip"},(0,a.kt)("p",{parentName:"admonition"},"Se voc\xea estiver usando o Google Chrome, considere instalar o ",(0,a.kt)("a",{parentName:"p",href:"https://chrome.google.com/webstore/detail/json-formatter/bcjindcccaagfpapjjmafapmmgkkhgoa?hl=en"},"JSON Formatter"),"\nou uma extens\xe3o semelhante para formatar automaticamente respostas JSON.")),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"Server Response",src:n(6410).Z,width:"1500",height:"929"})))}N.isMDXComponent=!0},6410:(e,t,n)=>{n.d(t,{Z:()=>o});const o=n.p+"assets/images/auth-response-e690484520882a382b8404b417e32853.webp"}}]);