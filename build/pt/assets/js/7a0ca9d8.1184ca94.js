"use strict";(self.webpackChunkaps_tutorials_website=self.webpackChunkaps_tutorials_website||[]).push([[559],{4137:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>m});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=a.createContext({}),l=function(e){var t=a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=l(e.components);return a.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},p=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,c=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),p=l(n),m=r,b=p["".concat(c,".").concat(m)]||p[m]||u[m]||o;return n?a.createElement(b,i(i({ref:t},d),{},{components:n})):a.createElement(b,i({ref:t},d))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=p;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:r,i[1]=s;for(var l=2;l<o;l++)i[l]=n[l];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}p.displayName="MDXCreateElement"},9584:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>c,default:()=>m,frontMatter:()=>s,metadata:()=>l,toc:()=>u});var a=n(7462),r=(n(7294),n(4137));const o={toc:[]};function i(e){let{components:t,...i}=e;return(0,r.kt)("wrapper",(0,a.Z)({},o,i,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Final folder structure",src:n(2117).Z,width:"3580",height:"2080"})))}i.isMDXComponent=!0;const s={},c="Estrutura da interface do usu\xe1rio",l={unversionedId:"tutorials/acc-admin/ui",id:"tutorials/acc-admin/ui",title:"Estrutura da interface do usu\xe1rio",description:"Ok, vamos construir a parte do lado do cliente do nosso aplicativo agora.",source:"@site/i18n/pt/docusaurus-plugin-content-docs/current/03-tutorials/05-acc-admin/05-ui.mdx",sourceDirName:"03-tutorials/05-acc-admin",slug:"/tutorials/acc-admin/ui",permalink:"/pt/tutorials/acc-admin/ui",draft:!1,editUrl:"https://github.com/autodesk-platform-services/aps-tutorials-website/edit/master/docs/03-tutorials/05-acc-admin/05-ui.mdx",tags:[],version:"current",sidebarPosition:5,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Administrador de Conta",permalink:"/pt/tutorials/acc-admin/admin"},next:{title:"Tabela",permalink:"/pt/tutorials/acc-admin/table"}},d={},u=[{value:"Espa\xe7o reservado para mesa",id:"espa\xe7o-reservado-para-mesa",level:2},{value:"L\xf3gica da barra lateral",id:"l\xf3gica-da-barra-lateral",level:2},{value:"L\xf3gica de aplica\xe7\xe3o",id:"l\xf3gica-de-aplica\xe7\xe3o",level:2},{value:"Interface do usu\xe1rio",id:"interface-do-usu\xe1rio",level:2},{value:"Experimente",id:"experimente",level:2}],p={toc:u};function m(e){let{components:t,...o}=e;return(0,r.kt)("wrapper",(0,a.Z)({},p,o,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"estrutura-da-interface-do-usu\xe1rio"},"Estrutura da interface do usu\xe1rio"),(0,r.kt)("p",null,"Ok, vamos construir a parte do lado do cliente do nosso aplicativo agora."),(0,r.kt)("h2",{id:"espa\xe7o-reservado-para-mesa"},"Espa\xe7o reservado para mesa"),(0,r.kt)("p",null,"Vamos come\xe7ar implementando uma fun\xe7\xe3o de espa\xe7o reservado de Tabela,\nCrie um arquivo 'table.js' na subpasta 'wwwroot' com o seguinte c\xf3digo:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="wwwroot/table.js"',title:'"wwwroot/table.js"'},"const TABLE_TABS = {\n    'PROJECTS': {\n        'REQUEST_URL': '/api/admin/projects',\n        'TAB_NAME': 'PROJECTS',\n        'CATEGORY_NAME': 'hub',\n        'CATEGORY_DEFAULT': true\n    },\n    'PROJECT': {\n        'REQUEST_URL': '/api/admin/project',\n        'TAB_NAME': 'PROJECT',\n        'CATEGORY_NAME': 'project',\n        'CATEGORY_DEFAULT': true\n    },\n    'USERS': {\n        'REQUEST_URL': '/api/admin/project/users',\n        'TAB_NAME': 'USERS',\n        'CATEGORY_NAME': 'project',\n        'CATEGORY_DEFAULT': false\n    }\n}\n//////////////////////////////////////////////////////////////////////////////////////////////////////////\n//Table class wraps the specific data info\nclass Table {\n    #tableId;\n    #accountId;\n    #projectId;\n    #tabKey;\n    #dataSet;\n    #maxItem;\n    constructor(tableId, accountId = null, projectId = null, tabKey = 'PROJECTS') {\n        this.#tableId = tableId;\n        this.#accountId = accountId;\n        this.#projectId = projectId;\n        this.#tabKey = tabKey;\n        this.#dataSet = null;\n        this.#maxItem = 5;\n    };\n    get tabKey(){\n        return this.#tabKey;\n    }\n    set tabKey( tabKey){\n        this.#tabKey = tabKey;\n    }\n    resetData = async( tabKey=null, accountId=null, projectId=null ) =>{\n        //TBD\n    }\n    drawTable = () => {\n        //TBD\n    }\n    exportToCSV = ()=>{\n        //TBD\n    }\n    importFromCSV = async() => {\n        //TBD\n    }    \n}\n\nexport async function refreshTable( accountId = null, projectId=null ) {\n    $(\"#loadingoverlay\").fadeIn()\n    if( TABLE_TABS[g_accDataTable.tabKey].CATEGORY_NAME=='hub' && projectId ){\n        for (let key in TABLE_TABS) {\n            if( TABLE_TABS[key].CATEGORY_NAME == 'hub' ){\n                $(\"#\" + key).addClass(\"hidden\");\n                $(\"#\" + key).removeClass(\"active\");\n            }\n            else{\n                if( TABLE_TABS[key].CATEGORY_DEFAULT )\n                    $(\"#\" + key).addClass(\"active\");\n                $(\"#\" + key).removeClass(\"hidden\");\n            }\n        } \n    }\n    if (TABLE_TABS[g_accDataTable.tabKey].CATEGORY_NAME == 'project' && !projectId) {\n        for (let key in TABLE_TABS) {\n            if (TABLE_TABS[key].CATEGORY_NAME == 'hub') {\n                $(\"#\" + key).removeClass(\"hidden\");\n                if (TABLE_TABS[key].CATEGORY_DEFAULT)\n                    $(\"#\" + key).addClass(\"active\");\n            }\n            else {\n                $(\"#\" + key).addClass(\"hidden\");\n                $(\"#\" + key).removeClass(\"active\");\n            }\n        }\n    }\n    const activeTab = $(\"ul#adminTableTabs li.active\")[0].id;\n    g_accDataTable.tabKey = activeTab;\n    alert( \"current active tab is: \" + activeTab );\n    $(\"#loadingoverlay\").fadeOut()\n}\nexport async function initTableTabs(){\n    // add all tabs\n    for (let key in TABLE_TABS) {\n        $('<li id=' + key + '><a href=\"accTable\" data-toggle=\"tab\">' + TABLE_TABS[key].TAB_NAME + '</a></li>').appendTo('#adminTableTabs');\n        $(\"#\" + key).addClass((TABLE_TABS[key].CATEGORY_NAME == 'hub' && TABLE_TABS[key].CATEGORY_DEFAULT) ? \"active\" : \"hidden\");\n    } \n    // event on the tabs\n    $('a[data-toggle=\"tab\"]').on('shown.bs.tab', async function (e) {\n        $(\"#loadingoverlay\").fadeIn()\n        const activeTab = e.target.parentElement.id;\n        g_accDataTable.tabKey = activeTab;\n        alert( \"current active tab is: \" + activeTab );\n        $(\"#loadingoverlay\").fadeOut()\n    }); \n}\nvar g_accDataTable = new Table('#accTable' );\n")),(0,r.kt)("p",null,"O script \xe9 um ",(0,r.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Modules"},"m\xf3dulo ES6"),"\nque definem uma classe 'Tabela' que \xe9 usada para listar as informa\xe7\xf5es de Projetos e Usu\xe1rios, o m\xf3dulo tamb\xe9m\nexporta duas fun\xe7\xf5es:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"'initTableTabs' criar\xe1 as Guias e tamb\xe9m registrar\xe1 a fun\xe7\xe3o quando a guia ativa for alterada."),(0,r.kt)("li",{parentName:"ul"},"'refreshTable' para carregar os dados do hub/projeto selecionado na tabela.")),(0,r.kt)("h2",{id:"l\xf3gica-da-barra-lateral"},"L\xf3gica da barra lateral"),(0,r.kt)("p",null,"Em seguida, implementaremos o comportamento de uma barra lateral onde exibiremos\ntodos os hubs e projetos ACC em um componente de exibi\xe7\xe3o em \xe1rvore de terceiros 3rd.\nCrie um arquivo 'sidebar.js' na subpasta 'wwwroot' com o seguinte c\xf3digo:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="wwwroot/sidebar.js"',title:'"wwwroot/sidebar.js"'},"async function getJSON(url) {\n    const resp = await fetch(url);\n    if (!resp.ok) {\n        alert('Could not load tree data. See console for more details.');\n        console.error(await resp.text());\n        return [];\n    }\n    return resp.json();\n}\nfunction createTreeNode(id, text, icon, children = false) {\n    return { id, text, children, itree: { icon } };\n}\nasync function getHubs() {\n    const hubs = await getJSON('/api/hubs');\n    return hubs.map(hub => createTreeNode(`hub|${hub.id}`, hub.attributes.name, 'icon-hub', true));\n}\nasync function getProjects(hubId) {\n    const projects = await getJSON(`/api/hubs/${hubId}/projects`);\n    return projects.map(project => createTreeNode(`project|${hubId}|${project.id}`, project.attributes.name, 'icon-project', false));\n}\n\nexport function initTree(selector, onSelectionChanged) {\n    // See http://inspire-tree.com\n    const tree = new InspireTree({\n        data: function (node) {\n            if (!node || !node.id) {\n                return getHubs();\n            } else {\n                const tokens = node.id.split('|');\n                switch (tokens[0]) {\n                    case 'hub': return getProjects(tokens[1]);\n                    default: return [];\n                }\n            }\n        }\n    });\n    tree.on('node.click', function (event, node) {\n        event.preventTreeDefault();\n        const tokens = node.id.split('|');\n        if (tokens[0] === 'hub') {\n            onSelectionChanged( tokens[1], null);\n        }\n        if (tokens[0] === 'project') {\n            onSelectionChanged( tokens[1], tokens[2]);\n        }\n    });\n    return new InspireTreeDOM(tree, { target: selector });\n}\n")),(0,r.kt)("h2",{id:"l\xf3gica-de-aplica\xe7\xe3o"},"L\xf3gica de aplica\xe7\xe3o"),(0,r.kt)("p",null,"Agora vamos conectar todos os componentes da interface do usu\xe1rio. Crie um arquivo 'main.js' em\na pasta 'wwwroot' e preencha-a com o seguinte c\xf3digo:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="wwwroot/main.js"',title:'"wwwroot/main.js"'},"import { refreshTable, initTableTabs } from './table.js';\nimport { initTree } from './sidebar.js';\nconst login = document.getElementById('login');\ntry {\n    const resp = await fetch('/api/auth/profile');\n    if (resp.ok) {\n        const user = await resp.json();\n        login.innerText = `Logout (${user.name})`;\n        login.onclick = () => {\n            const iframe = document.createElement('iframe');\n            iframe.style.visibility = 'hidden';\n            iframe.src = 'https://accounts.autodesk.com/Authentication/LogOut';\n            document.body.appendChild(iframe);\n            iframe.onload = () => {\n                window.location.replace('/api/auth/logout');\n                document.body.removeChild(iframe);\n            };\n        }\n        initTree('#tree', (accountId, projectId) => refreshTable(accountId, projectId));\n        await initTableTabs();\n    } else {\n        login.innerText = 'Login';\n        login.onclick = () => window.location.replace('/api/auth/login');\n    }\n    login.style.visibility = 'visible';\n} catch (err) {\n    alert('Could not initialize the application. See console for more details.');\n    console.error(err);\n}\n")),(0,r.kt)("p",null,"O script primeiro tentar\xe1 obter detalhes do usu\xe1rio para verificar se estamos conectados ou n\xe3o.\nSe estivermos, o c\xf3digo pode ent\xe3o inicializar a tabela, bem como o componente de exibi\xe7\xe3o em \xe1rvore.\nA fun\xe7\xe3o de retorno de chamada passada para 'initTree' garante que quando clicamos em um n\xf3 de folha\nNa \xe1rvore, a tabela come\xe7ar\xe1 a carregar os dados correspondentes."),(0,r.kt)("h2",{id:"interface-do-usu\xe1rio"},"Interface do usu\xe1rio"),(0,r.kt)("p",null,"E, finalmente, vamos construir a interface do usu\xe1rio do nosso aplicativo."),(0,r.kt)("p",null,"Crie um arquivo 'main.css' na subpasta 'wwwroot' e preencha-o com as seguintes regras CSS:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-css",metastring:'title="wwwroot/main.css"',title:'"wwwroot/main.css"'},"body, html {\n    margin: 0;\n    padding: 0;\n    height: 100vh;\n    font-family: ArtifaktElement;\n}\n#header, #sidebar, #table, #loadingoverlay {\n    position: absolute;\n}\n#header {\n    height: 3em;\n    width: 100%;\n    display: flex;\n    flex-flow: row nowrap;\n    justify-content: space-between;\n    align-items: center;\n}\n#sidebar {\n    width: 25%;\n    left: 0;\n    top: 3em;\n    bottom: 0;\n    overflow-y: scroll;\n}\n#table {\n    width: 75%;\n    right: 0;\n    top: 3em;\n    bottom: 0;\n    overflow-y: scroll;\n}\n#loadingoverlay{\n    top: 3em;\n    z-index: 90;\n    width: 100%;\n    height: 100%;\n    display: none;\n    background: rgba(0, 0, 0, 0.6);\n}\n.cv-spinner {\n    height: 100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n.spinner {\n    width: 60px;\n    height: 60px;\n    border: 6px #ddd solid;\n    border-top: 6px #2e93e6 solid;\n    border-radius: 50%;\n    animation: sp-anime 0.8s infinite linear;\n}\n@keyframes sp-anime {\n    0% {\n        transform: rotate(0deg);\n    }\n    100% {\n        transform: rotate(359deg);\n    }\n}\n#header > * {\n    height: 2em;\n    margin: 0 0.5em;\n}\n#login {\n    font-family: ArtifaktElement;\n    font-size: 1em;\n}\n#header .title {\n    height: auto;\n    margin-right: auto;\n}\n#tree {\n    margin: 0.5em;\n}\n#workingAnimation {    \n    text-align: center;\n}\n@media (max-width: 768px) {\n    #sidebar {\n        width: 100%;\n        top: 3em;\n        bottom: 75%;\n    }\n    #table {\n        width: 100%;\n        top: 25%;\n        bottom: 0;\n    }\n}\n.icon-hub:before {\n    background-image: url(https://raw.githubusercontent.com/primer/octicons/main/icons/apps-16.svg); /* or https://raw.githubusercontent.com/primer/octicons/main/icons/stack-16.svg */\n    background-size: cover;\n}\n.icon-project:before {\n    \n    background-image: url(https://raw.githubusercontent.com/primer/octicons/main/icons/project-16.svg); /* or https://raw.githubusercontent.com/primer/octicons/main/icons/organization-16.svg */\n    background-size: cover;\n}\n")),(0,r.kt)("p",null,"Em seguida, crie um arquivo 'index.html' na mesma pasta com o seguinte conte\xfado:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-html",metastring:'title="wwwroot/index.html"',title:'"wwwroot/index.html"'},'<!doctype html>\n<html lang="en">\n<head>\n    <meta charset="utf-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1">\n    <link rel="icon" type="image/x-icon" href="https://cdn.autodesk.io/favicon.ico">\n    <link rel="stylesheet" href="https://unpkg.com/inspire-tree-dom@4.0.6/dist/inspire-tree-light.min.css">\n    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css">\n    <link rel="stylesheet" href="https://unpkg.com/bootstrap-table@1.22.2/dist/bootstrap-table.min.css">\n    <link rel="stylesheet" href="/main.css">\n    <script src="//cdnjs.cloudflare.com/ajax/libs/jquery/3.3.1/jquery.min.js"><\/script>\n    <script src="https://cdnjs.cloudflare.com/ajax/libs/lodash.js/4.17.21/lodash.min.js"><\/script>\n    <script src="https://unpkg.com/inspire-tree@4.3.1/dist/inspire-tree.js"><\/script>\n    <script src="https://unpkg.com/inspire-tree-dom@4.0.6/dist/inspire-tree-dom.min.js"><\/script>\n    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js"><\/script>\n    <script src="https://unpkg.com/bootstrap-table@1.22.2/dist/bootstrap-table.min.js"><\/script>\n    <script src="https://rawgit.com/michaelsogos/bootstrap-table-toolbar-buttons/master/src/bootstrap-table-toolbar-buttons.js"><\/script>\n    <script src="https://unpkg.com/axios/dist/axios.min.js"><\/script>\n    <script src="/main.js" type="module"><\/script>\n    <title>Autodesk Platform Services: ACC Administrator</title>\n</head>\n<body>\n    <div id="header">\n        <img class="logo" src="https://cdn.autodesk.io/logo/black/stacked.png" alt="Autodesk Platform Services">\n        <span class="title">ACC Administrator</span>\n        <button id="login" style="visibility: hidden;">Login</button>\n    </div>\n    <div id="sidebar">\n        <div id="tree"></div>\n    </div>\n    <div id="table">\n        <ul id="adminTableTabs" class="nav nav-tabs">\n        </ul>\n        <table id="accTable" class="table-striped table-bordered table-hover">\n        </table>\n        <div id="loadingoverlay">\n            <div class="cv-spinner">\n                <span class="spinner"></span>\n            </div>\n        </div>\n    </div>\n</body>\n</html>\n')),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Note that since ",(0,r.kt)("inlineCode",{parentName:"p"},"main.js")," is also an ES6 module, we have to use ",(0,r.kt)("inlineCode",{parentName:"p"},'type="module"')," in its ",(0,r.kt)("inlineCode",{parentName:"p"},"<script>")," tag.")),(0,r.kt)("p",null,"A estrutura de pastas final do c\xf3digo-fonte do seu aplicativo agora deve ter a seguinte apar\xeancia:"),(0,r.kt)(i,{mdxType:"NodeJsVsCodeStructure"}),(0,r.kt)("h2",{id:"experimente"},"Experimente"),(0,r.kt)("p",null,"Seu aplicativo agora est\xe1 pronto para testar a estrutura. Inicie como de costume, e quando voc\xea for para\n","[http://localhost:8080]"," (http://localhost:8080), voc\xea deve ser apresentado com uma interface do usu\xe1rio simples, com\numa vista em \xe1rvore no lado esquerdo e uma tabela vazia \xe0 direita. Tente navegar pela \xe1rvore,\nCarregaremos dados na tabela na pr\xf3xima etapa."),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Account Admin",src:n(2984).Z,width:"1915",height:"1056"})))}m.isMDXComponent=!0},2984:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/aps-acc-admin-8f115a3171f9716d158a31cb6d143d02.webp"},2117:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/final-folder-structure-9b10003e154ea59bb199776468eec478.webp"}}]);